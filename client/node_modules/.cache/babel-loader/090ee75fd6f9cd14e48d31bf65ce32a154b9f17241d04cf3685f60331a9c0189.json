{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SessionProcessor = void 0;\nclass SessionProcessor {\n  #eventManager;\n  #browserCdpClient;\n  constructor(eventManager, browserCdpClient) {\n    this.#eventManager = eventManager;\n    this.#browserCdpClient = browserCdpClient;\n  }\n  status() {\n    return {\n      ready: false,\n      message: 'already connected'\n    };\n  }\n  async create(_params) {\n    // Since mapper exists, there is a session already.\n    // Still the mapper can handle capabilities for us.\n    // Currently, only Puppeteer calls here but, eventually, every client\n    // should delegrate capability processing here.\n    const version = await this.#browserCdpClient.sendCommand('Browser.getVersion');\n    return {\n      sessionId: 'unknown',\n      capabilities: {\n        acceptInsecureCerts: false,\n        browserName: version.product,\n        browserVersion: version.revision,\n        platformName: '',\n        setWindowRect: false,\n        webSocketUrl: '',\n        userAgent: version.userAgent\n      }\n    };\n  }\n  async subscribe(params, channel = null) {\n    await this.#eventManager.subscribe(params.events, params.contexts ?? [null], channel);\n    return {};\n  }\n  async unsubscribe(params, channel = null) {\n    await this.#eventManager.unsubscribe(params.events, params.contexts ?? [null], channel);\n    return {};\n  }\n}\nexports.SessionProcessor = SessionProcessor;","map":{"version":3,"names":["SessionProcessor","eventManager","browserCdpClient","constructor","status","ready","message","create","_params","version","sendCommand","sessionId","capabilities","acceptInsecureCerts","browserName","product","browserVersion","revision","platformName","setWindowRect","webSocketUrl","userAgent","subscribe","params","channel","events","contexts","unsubscribe","exports"],"sources":["../../../../../src/bidiMapper/modules/session/SessionProcessor.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AA2BA,MAAaA,gBAAgB;EAC3B,CAAAC,YAAa;EACb,CAAAC,gBAAiB;EAEjBC,YAAYF,YAA0B,EAAEC,gBAA2B;IACjE,IAAI,CAAC,CAAAD,YAAa,GAAGA,YAAY;IACjC,IAAI,CAAC,CAAAC,gBAAiB,GAAGA,gBAAgB;EAC3C;EAEAE,MAAMA,CAAA;IACJ,OAAO;MAACC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAmB,CAAC;EACrD;EAEA,MAAMC,MAAMA,CAACC,OAA8B;IACzC;IACA;IACA;IACA;IACA,MAAMC,OAAO,GACX,MAAM,IAAI,CAAC,CAAAP,gBAAiB,CAACQ,WAAW,CAAC,oBAAoB,CAAC;IAChE,OAAO;MACLC,SAAS,EAAE,SAAS;MACpBC,YAAY,EAAE;QACZC,mBAAmB,EAAE,KAAK;QAC1BC,WAAW,EAAEL,OAAO,CAACM,OAAO;QAC5BC,cAAc,EAAEP,OAAO,CAACQ,QAAQ;QAChCC,YAAY,EAAE,EAAE;QAChBC,aAAa,EAAE,KAAK;QACpBC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAEZ,OAAO,CAACY;;KAEtB;EACH;EAEA,MAAMC,SAASA,CACbC,MAAmC,EACnCC,OAAA,GAA2B,IAAI;IAE/B,MAAM,IAAI,CAAC,CAAAvB,YAAa,CAACqB,SAAS,CAChCC,MAAM,CAACE,MAAmC,EAC1CF,MAAM,CAACG,QAAQ,IAAI,CAAC,IAAI,CAAC,EACzBF,OAAO,CACR;IACD,OAAO,EAAE;EACX;EAEA,MAAMG,WAAWA,CACfJ,MAAmC,EACnCC,OAAA,GAA2B,IAAI;IAE/B,MAAM,IAAI,CAAC,CAAAvB,YAAa,CAAC0B,WAAW,CAClCJ,MAAM,CAACE,MAAmC,EAC1CF,MAAM,CAACG,QAAQ,IAAI,CAAC,IAAI,CAAC,EACzBF,OAAO,CACR;IACD,OAAO,EAAE;EACX;;AAxDFI,OAAA,CAAA5B,gBAAA,GAAAA,gBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}