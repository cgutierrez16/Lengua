{"ast":null,"code":"var _jsxFileName = \"/Users/carlosgutierrez/Documents/React/spanish/client/src/pages/lyrics.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { LyricTypingInput } from \"../components/lyricTypingInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Lyrics = () => {\n  _s();\n  const [lyrics, setLyrics] = useState([]);\n  const [translation, setTranslation] = useState([]);\n  const [title, setTitle] = useState();\n  const [formattedTitle, setFormattedTitle] = useState();\n  const [artist, setArtist] = useState([]);\n  const [userInput, setUserInput] = useState();\n  const lyricRefs = useRef([]); // Store refs for lyrics\n\n  useEffect(() => {\n    console.log(\"Translation updated:\", translation);\n  }, [translation]);\n  useLayoutEffect(() => {\n    if (lyrics.length > 0) {\n      lyricRefs.current = []; // Reset refs before measuring new lyrics\n    }\n  }, [lyrics]);\n  useLayoutEffect(() => {\n    if (lyrics.length > 0) {\n      const heights = lyricRefs.current.map(ref => (ref === null || ref === void 0 ? void 0 : ref.offsetHeight) || 0);\n      console.log(\"Updated Lyric Heights:\", heights);\n    }\n  }, [lyrics, translation]); // Run after lyrics and translation update\n\n  /**\n   * Function used to add a song to database if it does not exist\n   */\n  const addLyrics = async () => {\n    axios.post(\"/api/lyrics\").then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  /**\n   * Handles the search query from user. Strips all white space and toLowerCase the userInput state. Then makes a request to /lyrics route and returns the song\n   * @param {event} event The event of a submission being recognized\n   */\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await axios.get(\"/api/lyrics\", {\n      params: {\n        userInput: userInput\n      }\n    }).then(res => {\n      console.log(res.data.rows[0]);\n      setArtist(res.data.rows[0].artist);\n      setTitle(res.data.rows[0].title);\n      setFormattedTitle(res.data.rows[0].formattitle);\n      setLyrics(res.data.rows[0].lyrics);\n      setTranslation(res.data.rows[0].translation);\n      console.log(title);\n    }).catch(err => {\n      console.error(\"Error:\", err); // Handle errors\n    });\n    setUserInput(\"\");\n  };\n\n  /**\n   * Any time changes are made to form box (i.e. A single letter being typed) this function will    trigger and update the userInput React state accordingly. Binded to the onChange attribute of form tag\n   * @param {event} event  The event of changes being made to the form text box\n   */\n  const handleChange = event => {\n    setUserInput(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pb-5 mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onChange: handleChange,\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"input-group input-group-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"input-group-text\",\n                id: \"inputGroup-sizing-lg\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"lyric-search-button\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-search\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                class: \"form-control\",\n                \"aria-label\": \"Sizing example input\",\n                \"aria-describedby\": \"inputGroup-sizing-lg\",\n                autocomplete: \"off\",\n                placeholder: \"Search...\",\n                value: userInput,\n                id: \"lyric-search-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addLyrics,\n            children: \"Add Lyrics to Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), title ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-5 justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-8 d-flex justify-content-evenly \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-4 ms-5 ps-5\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/song-covers/${formattedTitle}.jpg`,\n                alt: \"album cover\",\n                className: \"album-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-5 text-start pt-2\",\n              children: [title ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 28\n              }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Search for song name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 47\n              }, this), artist.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-truncate\",\n                style: {\n                  maxWidth: \"100%\",\n                  whiteSpace: \"nowrap\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"grey\",\n                  style: {\n                    display: \"inline\",\n                    fontSize: \"1.50rem\"\n                  },\n                  children: artist.join(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-evenly mt-5 py-5 lyrics-border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6 text-start ps-3\",\n            style: {\n              fontSize: \"22px\",\n              borderRight: \"solid 2px #5ae4a7\"\n            },\n            children: lyrics.length > 0 ? lyrics.map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lyrics-align test\",\n              ref: el => lyricRefs.current[index] = el // Store ref for measurement\n              ,\n              children: line\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6 text-start ps-3\",\n            style: {\n              fontSize: \"22px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(LyricTypingInput, {\n              lines: translation,\n              lyricRefs: lyricRefs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No song selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Lyrics, \"otgsMyE3JzZIVY0SMBDO/5Mmp+w=\");\n_c = Lyrics;\nvar _c;\n$RefreshReg$(_c, \"Lyrics\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","LyricTypingInput","jsxDEV","_jsxDEV","Lyrics","_s","lyrics","setLyrics","translation","setTranslation","title","setTitle","formattedTitle","setFormattedTitle","artist","setArtist","userInput","setUserInput","lyricRefs","console","log","useLayoutEffect","length","current","heights","map","ref","offsetHeight","addLyrics","post","then","res","data","catch","err","error","handleSubmit","event","preventDefault","get","params","rows","formattitle","handleChange","target","value","children","className","onChange","onSubmit","class","id","fileName","_jsxFileName","lineNumber","columnNumber","type","autocomplete","placeholder","onClick","src","alt","style","maxWidth","whiteSpace","overflow","textOverflow","display","fontSize","join","borderRight","line","index","el","lines","_c","$RefreshReg$"],"sources":["/Users/carlosgutierrez/Documents/React/spanish/client/src/pages/lyrics.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { LyricTypingInput } from \"../components/lyricTypingInput\";\n\nexport const Lyrics = () => {\n  const [lyrics, setLyrics] = useState([]);\n  const [translation, setTranslation] = useState([]);\n  const [title, setTitle] = useState();\n  const [formattedTitle, setFormattedTitle] = useState();\n  const [artist, setArtist] = useState([]);\n  const [userInput, setUserInput] = useState();\n  const lyricRefs = useRef([]); // Store refs for lyrics\n\n  useEffect(() => {\n    console.log(\"Translation updated:\", translation);\n  }, [translation]);\n\n  useLayoutEffect(() => {\n    if (lyrics.length > 0) {\n      lyricRefs.current = []; // Reset refs before measuring new lyrics\n    }\n  }, [lyrics]);\n  \n  useLayoutEffect(() => {\n    if (lyrics.length > 0) {\n      const heights = lyricRefs.current.map((ref) => ref?.offsetHeight || 0);\n      console.log(\"Updated Lyric Heights:\", heights);\n    }\n  }, [lyrics, translation]); // Run after lyrics and translation update\n  \n\n  /**\n   * Function used to add a song to database if it does not exist\n   */\n  const addLyrics = async () => {\n    axios\n      .post(\"/api/lyrics\")\n      .then((res) => {\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  /**\n   * Handles the search query from user. Strips all white space and toLowerCase the userInput state. Then makes a request to /lyrics route and returns the song\n   * @param {event} event The event of a submission being recognized\n   */\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    await axios\n      .get(\"/api/lyrics\", {\n        params: { userInput: userInput },\n      })\n      .then((res) => {\n        console.log(res.data.rows[0]);\n        setArtist(res.data.rows[0].artist);\n        setTitle(res.data.rows[0].title);\n        setFormattedTitle(res.data.rows[0].formattitle);\n        setLyrics(res.data.rows[0].lyrics);\n        setTranslation(res.data.rows[0].translation);\n        console.log(title);\n      })\n      .catch((err) => {\n        console.error(\"Error:\", err); // Handle errors\n      });\n\n    setUserInput(\"\");\n  };\n\n  /**\n   * Any time changes are made to form box (i.e. A single letter being typed) this function will    trigger and update the userInput React state accordingly. Binded to the onChange attribute of form tag\n   * @param {event} event  The event of changes being made to the form text box\n   */\n  const handleChange = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  return (\n    <div>\n      <div className=\"container pb-5 mb-5\">\n        <div className=\"row justify-content-center mt-5\">\n          <div className=\"col-sm-6\">\n            <form onChange={handleChange} onSubmit={handleSubmit}>\n              <div class=\"input-group input-group-lg\">\n                <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">\n                  <button id=\"lyric-search-button\">\n                    <i class=\"fa fa-search\"></i>\n                  </button>\n                </span>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  aria-label=\"Sizing example input\"\n                  aria-describedby=\"inputGroup-sizing-lg\"\n                  autocomplete=\"off\"\n                  placeholder=\"Search...\"\n                  value={userInput}\n                  id=\"lyric-search-input\"\n                />\n              </div>\n            </form>\n            <button onClick={addLyrics}>Add Lyrics to Database</button>\n          </div>\n        </div>\n\n        {title ? (\n          <div>\n            <div className=\"row mt-5 justify-content-center\">\n              <div className=\"col-sm-8 d-flex justify-content-evenly \">\n                <div className=\"col-sm-4 ms-5 ps-5\">\n                  <img\n                    src={`/song-covers/${formattedTitle}.jpg`}\n                    alt=\"album cover\"\n                    className=\"album-cover\"\n                  />\n                </div>\n                <div className=\"col-sm-5 text-start pt-2\">\n                  {title ? <h1>{title}</h1> : <h1>Search for song name</h1>}\n                  {artist.length > 0 ? (\n                    <div\n                      className=\"text-truncate\"\n                      style={{\n                        maxWidth: \"100%\",\n                        whiteSpace: \"nowrap\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                      }}\n                    >\n                      <h2\n                        className=\"grey\"\n                        style={{ display: \"inline\", fontSize: \"1.50rem\" }}\n                      >\n                        {artist.join(\", \")}\n                      </h2>\n                    </div>\n                  ) : (\n                    <h2> </h2>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"row justify-content-evenly mt-5 py-5 lyrics-border\">\n              <div\n                className=\"col-sm-6 text-start ps-3\"\n                style={{\n                  fontSize: \"22px\",\n                  borderRight: \"solid 2px #5ae4a7\",                  \n                }}\n              >\n                {lyrics.length > 0 ? (\n                  lyrics.map((line, index) => (\n                    <p\n                      key={index}\n                      className=\"lyrics-align test\"\n                      ref={(el) => (lyricRefs.current[index] = el)} // Store ref for measurement\n                    >\n                      {line}\n                    </p>\n                  ))\n                ) : (\n                  <p> </p>\n                )}\n              </div>\n              <div\n                className=\"col-sm-6 text-start ps-3\"\n                style={{ fontSize: \"22px\" }}\n              >\n                <LyricTypingInput lines={translation} lyricRefs={lyricRefs}/>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <h1>No song selected</h1>\n        )}\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}