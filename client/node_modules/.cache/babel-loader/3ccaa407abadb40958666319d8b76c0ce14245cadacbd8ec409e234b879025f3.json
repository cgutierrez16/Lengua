{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InputProcessor = void 0;\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst assert_js_1 = require(\"../../../utils/assert.js\");\nconst ActionDispatcher_js_1 = require(\"../input/ActionDispatcher.js\");\nconst InputStateManager_js_1 = require(\"../input/InputStateManager.js\");\nclass InputProcessor {\n  #browsingContextStorage;\n  #realmStorage;\n  #inputStateManager = new InputStateManager_js_1.InputStateManager();\n  constructor(browsingContextStorage, realmStorage) {\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#realmStorage = realmStorage;\n  }\n  async performActions(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    const inputState = this.#inputStateManager.get(context.top);\n    const actionsByTick = this.#getActionsByTick(params, inputState);\n    const dispatcher = new ActionDispatcher_js_1.ActionDispatcher(inputState, context, await ActionDispatcher_js_1.ActionDispatcher.isMacOS(context).catch(() => false));\n    await dispatcher.dispatchActions(actionsByTick);\n    return {};\n  }\n  async releaseActions(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    const topContext = context.top;\n    const inputState = this.#inputStateManager.get(topContext);\n    const dispatcher = new ActionDispatcher_js_1.ActionDispatcher(inputState, context, await ActionDispatcher_js_1.ActionDispatcher.isMacOS(context).catch(() => false));\n    await dispatcher.dispatchTickActions(inputState.cancelList.reverse());\n    this.#inputStateManager.delete(topContext);\n    return {};\n  }\n  async setFiles(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    const realm = await context.getOrCreateSandbox(undefined);\n    let result;\n    try {\n      result = await realm.callFunction(String(function getFiles(fileListLength) {\n        if (!(this instanceof HTMLInputElement)) {\n          return 0 /* ErrorCode.Object */;\n        }\n        if (this.type !== 'file') {\n          return 1 /* ErrorCode.Type */;\n        }\n        if (this.disabled) {\n          return 2 /* ErrorCode.Disabled */;\n        }\n        if (fileListLength > 1 && !this.multiple) {\n          return 3 /* ErrorCode.Multiple */;\n        }\n        return;\n      }), false, params.element, [{\n        type: 'number',\n        value: params.files.length\n      }]);\n    } catch {\n      throw new protocol_js_1.NoSuchElementException(`Could not find element ${params.element.sharedId}`);\n    }\n    (0, assert_js_1.assert)(result.type === 'success');\n    if (result.result.type === 'number') {\n      switch (result.result.value) {\n        case 0 /* ErrorCode.Object */:\n          {\n            throw new protocol_js_1.NoSuchElementException(`Could not find element ${params.element.sharedId}`);\n          }\n        case 1 /* ErrorCode.Type */:\n          {\n            throw new protocol_js_1.UnableToSetFileInputException(`Element ${params.element.sharedId} is not a file input`);\n          }\n        case 2 /* ErrorCode.Disabled */:\n          {\n            throw new protocol_js_1.UnableToSetFileInputException(`Input element ${params.element.sharedId} is disabled`);\n          }\n        case 3 /* ErrorCode.Multiple */:\n          {\n            throw new protocol_js_1.UnableToSetFileInputException(`Cannot set multiple files on a non-multiple input element`);\n          }\n      }\n    }\n    /**\n     * The zero-length array is a special case, it seems that\n     * DOM.setFileInputFiles does not actually update the files in that case, so\n     * the solution is to eval the element value to a new FileList directly.\n     */\n    if (params.files.length === 0) {\n      // XXX: These events should converted to trusted events. Perhaps do this\n      // in `DOM.setFileInputFiles`?\n      await realm.callFunction(String(function dispatchEvent() {\n        if (this.files?.length === 0) {\n          this.dispatchEvent(new Event('cancel', {\n            bubbles: true\n          }));\n          return;\n        }\n        this.files = new DataTransfer().files;\n        // Dispatch events for this case because it should behave akin to a user action.\n        this.dispatchEvent(new Event('input', {\n          bubbles: true,\n          composed: true\n        }));\n        this.dispatchEvent(new Event('change', {\n          bubbles: true\n        }));\n      }), false, params.element);\n      return {};\n    }\n    // Our goal here is to iterate over the input element files and get their\n    // file paths.\n    const paths = [];\n    for (let i = 0; i < params.files.length; ++i) {\n      const result = await realm.callFunction(String(function getFiles(index) {\n        return this.files?.item(index);\n      }), false, params.element, [{\n        type: 'number',\n        value: 0\n      }], \"root\" /* Script.ResultOwnership.Root */);\n      (0, assert_js_1.assert)(result.type === 'success');\n      if (result.result.type !== 'object') {\n        break;\n      }\n      const {\n        handle\n      } = result.result;\n      (0, assert_js_1.assert)(handle !== undefined);\n      const {\n        path\n      } = await realm.cdpClient.sendCommand('DOM.getFileInfo', {\n        objectId: handle\n      });\n      paths.push(path);\n      // Cleanup the handle.\n      void realm.disown(handle).catch(undefined);\n    }\n    paths.sort();\n    // We create a new array so we preserve the order of the original files.\n    const sortedFiles = [...params.files].sort();\n    if (paths.length !== params.files.length || sortedFiles.some((path, index) => {\n      return paths[index] !== path;\n    })) {\n      const {\n        objectId\n      } = await realm.deserializeForCdp(params.element);\n      // This cannot throw since this was just used in `callFunction` above.\n      (0, assert_js_1.assert)(objectId !== undefined);\n      await realm.cdpClient.sendCommand('DOM.setFileInputFiles', {\n        files: params.files,\n        objectId\n      });\n    } else {\n      // XXX: We should dispatch a trusted event.\n      await realm.callFunction(String(function dispatchEvent() {\n        this.dispatchEvent(new Event('cancel', {\n          bubbles: true\n        }));\n      }), false, params.element);\n    }\n    return {};\n  }\n  #getActionsByTick(params, inputState) {\n    const actionsByTick = [];\n    for (const action of params.actions) {\n      switch (action.type) {\n        case \"pointer\" /* SourceType.Pointer */:\n          {\n            action.parameters ??= {\n              pointerType: \"mouse\" /* Input.PointerType.Mouse */\n            };\n            action.parameters.pointerType ??= \"mouse\" /* Input.PointerType.Mouse */;\n            const source = inputState.getOrCreate(action.id, \"pointer\" /* SourceType.Pointer */, action.parameters.pointerType);\n            if (source.subtype !== action.parameters.pointerType) {\n              throw new protocol_js_1.InvalidArgumentException(`Expected input source ${action.id} to be ${source.subtype}; got ${action.parameters.pointerType}.`);\n            }\n            break;\n          }\n        default:\n          inputState.getOrCreate(action.id, action.type);\n      }\n      const actions = action.actions.map(item => ({\n        id: action.id,\n        action: item\n      }));\n      for (let i = 0; i < actions.length; i++) {\n        if (actionsByTick.length === i) {\n          actionsByTick.push([]);\n        }\n        actionsByTick[i].push(actions[i]);\n      }\n    }\n    return actionsByTick;\n  }\n}\nexports.InputProcessor = InputProcessor;","map":{"version":3,"names":["protocol_js_1","require","assert_js_1","ActionDispatcher_js_1","InputStateManager_js_1","InputProcessor","browsingContextStorage","realmStorage","inputStateManager","InputStateManager","constructor","performActions","params","context","getContext","inputState","get","top","actionsByTick","getActionsByTick","dispatcher","ActionDispatcher","isMacOS","catch","dispatchActions","releaseActions","topContext","dispatchTickActions","cancelList","reverse","delete","setFiles","realm","getOrCreateSandbox","undefined","result","callFunction","String","getFiles","fileListLength","HTMLInputElement","type","disabled","multiple","element","value","files","length","NoSuchElementException","sharedId","assert","UnableToSetFileInputException","dispatchEvent","Event","bubbles","DataTransfer","composed","paths","i","index","item","handle","path","cdpClient","sendCommand","objectId","push","disown","sort","sortedFiles","some","deserializeForCdp","#getActionsByTick","action","actions","parameters","pointerType","source","getOrCreate","id","subtype","InvalidArgumentException","map","exports"],"sources":["../../../../../src/bidiMapper/modules/input/InputProcessor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}