{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const LyricTypingInput=_ref=>{let{lines}=_ref;// Initialize state to store user inputs\nconst[inputs,setInputs]=useState(lines.map(line=>line.split(\" \").map(()=>\"\")));const inputRefs=useRef([]);const handleChange=(e,lineIndex,wordIndex)=>{const{value}=e.target;const newInputs=inputs.map((line,li)=>line.map((word,wi)=>{if(li===lineIndex&&wi===wordIndex){return value;}return word;}));setInputs(newInputs);// Move to next input if current input is full\nif(value.length>=e.target.maxLength){var _inputRefs$current$li;const nextInput=(_inputRefs$current$li=inputRefs.current[lineIndex])===null||_inputRefs$current$li===void 0?void 0:_inputRefs$current$li[wordIndex+1];if(nextInput){nextInput.focus();}}};useEffect(()=>{// Initialize inputRefs.current as a 2D array\ninputRefs.current=lines.map(()=>[]);},[lines]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"balls lol\"}),lines.map((line,lineIndex)=>/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"20px\"},className:\"test\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",style:{width:\"\".concat(line.length,\"rem\"),// Increase the multiplier for the width calculation\nmargin:\"0 5px\",textAlign:\"left\",// Align text to the left\nborder:\"none\",borderBottom:\"2px solid #000\",// Add bottom border to simulate underline\noutline:\"none\",// Remove outline on focus\nbackgroundColor:\"transparent\",// Transparent background\npadding:\"2px 0\",// Adjust padding for better alignment\npaddingRight:\"5px\"// Extra padding to the right for better readability\n},maxLength:line.length},lineIndex)},lineIndex))]});};","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","LyricTypingInput","_ref","lines","inputs","setInputs","map","line","split","inputRefs","handleChange","e","lineIndex","wordIndex","value","target","newInputs","li","word","wi","length","maxLength","_inputRefs$current$li","nextInput","current","focus","children","style","marginBottom","className","type","width","concat","margin","textAlign","border","borderBottom","outline","backgroundColor","padding","paddingRight"],"sources":["/Users/carlosgutierrez/Documents/React/spanish/client/src/components/lyricTypingInput.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nexport const LyricTypingInput = ({ lines }) => {\n  // Initialize state to store user inputs\n  const [inputs, setInputs] = useState(\n    lines.map((line) => line.split(\" \").map(() => \"\"))\n  );\n\n  const inputRefs = useRef([]);\n\n  const handleChange = (e, lineIndex, wordIndex) => {\n    const { value } = e.target;\n    const newInputs = inputs.map((line, li) =>\n      line.map((word, wi) => {\n        if (li === lineIndex && wi === wordIndex) {\n          return value;\n        }\n        return word;\n      })\n    );\n    setInputs(newInputs);\n\n    // Move to next input if current input is full\n    if (value.length >= e.target.maxLength) {\n      const nextInput = inputRefs.current[lineIndex]?.[wordIndex + 1];\n      if (nextInput) {\n        nextInput.focus();\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Initialize inputRefs.current as a 2D array\n    inputRefs.current = lines.map(() => []);\n  }, [lines]);\n\n  return (\n    <div>\n      <h1>balls lol</h1>\n      {lines.map((line, lineIndex) => (\n        <div key={lineIndex} style={{ marginBottom: \"20px\" }} className=\"test\">\n          <input\n            type=\"text\"\n            key={lineIndex}\n            style={{\n              width: `${line.length}rem`, // Increase the multiplier for the width calculation\n              margin: \"0 5px\",\n              textAlign: \"left\", // Align text to the left\n              border: \"none\",\n              borderBottom: \"2px solid #000\", // Add bottom border to simulate underline\n              outline: \"none\", // Remove outline on focus\n              backgroundColor: \"transparent\", // Transparent background\n              padding: \"2px 0\", // Adjust padding for better alignment\n              paddingRight: \"5px\", // Extra padding to the right for better readability\n            }}\n            maxLength={line.length}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3D,MAAO,MAAM,CAAAC,gBAAgB,CAAGC,IAAA,EAAe,IAAd,CAAEC,KAAM,CAAC,CAAAD,IAAA,CACxC;AACA,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAClCS,KAAK,CAACG,GAAG,CAAEC,IAAI,EAAKA,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACF,GAAG,CAAC,IAAM,EAAE,CAAC,CACnD,CAAC,CAED,KAAM,CAAAG,SAAS,CAAGb,MAAM,CAAC,EAAE,CAAC,CAE5B,KAAM,CAAAc,YAAY,CAAGA,CAACC,CAAC,CAAEC,SAAS,CAAEC,SAAS,GAAK,CAChD,KAAM,CAAEC,KAAM,CAAC,CAAGH,CAAC,CAACI,MAAM,CAC1B,KAAM,CAAAC,SAAS,CAAGZ,MAAM,CAACE,GAAG,CAAC,CAACC,IAAI,CAAEU,EAAE,GACpCV,IAAI,CAACD,GAAG,CAAC,CAACY,IAAI,CAAEC,EAAE,GAAK,CACrB,GAAIF,EAAE,GAAKL,SAAS,EAAIO,EAAE,GAAKN,SAAS,CAAE,CACxC,MAAO,CAAAC,KAAK,CACd,CACA,MAAO,CAAAI,IAAI,CACb,CAAC,CACH,CAAC,CACDb,SAAS,CAACW,SAAS,CAAC,CAEpB;AACA,GAAIF,KAAK,CAACM,MAAM,EAAIT,CAAC,CAACI,MAAM,CAACM,SAAS,CAAE,KAAAC,qBAAA,CACtC,KAAM,CAAAC,SAAS,EAAAD,qBAAA,CAAGb,SAAS,CAACe,OAAO,CAACZ,SAAS,CAAC,UAAAU,qBAAA,iBAA5BA,qBAAA,CAA+BT,SAAS,CAAG,CAAC,CAAC,CAC/D,GAAIU,SAAS,CAAE,CACbA,SAAS,CAACE,KAAK,CAAC,CAAC,CACnB,CACF,CACF,CAAC,CAED9B,SAAS,CAAC,IAAM,CACd;AACAc,SAAS,CAACe,OAAO,CAAGrB,KAAK,CAACG,GAAG,CAAC,IAAM,EAAE,CAAC,CACzC,CAAC,CAAE,CAACH,KAAK,CAAC,CAAC,CAEX,mBACEH,KAAA,QAAA0B,QAAA,eACE5B,IAAA,OAAA4B,QAAA,CAAI,WAAS,CAAI,CAAC,CACjBvB,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,CAAEK,SAAS,gBACzBd,IAAA,QAAqB6B,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAO,CAAE,CAACC,SAAS,CAAC,MAAM,CAAAH,QAAA,cACpE5B,IAAA,UACEgC,IAAI,CAAC,MAAM,CAEXH,KAAK,CAAE,CACLI,KAAK,IAAAC,MAAA,CAAKzB,IAAI,CAACa,MAAM,OAAK,CAAE;AAC5Ba,MAAM,CAAE,OAAO,CACfC,SAAS,CAAE,MAAM,CAAE;AACnBC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,gBAAgB,CAAE;AAChCC,OAAO,CAAE,MAAM,CAAE;AACjBC,eAAe,CAAE,aAAa,CAAE;AAChCC,OAAO,CAAE,OAAO,CAAE;AAClBC,YAAY,CAAE,KAAO;AACvB,CAAE,CACFnB,SAAS,CAAEd,IAAI,CAACa,MAAO,EAZlBR,SAaN,CAAC,EAhBMA,SAiBL,CACN,CAAC,EACC,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}