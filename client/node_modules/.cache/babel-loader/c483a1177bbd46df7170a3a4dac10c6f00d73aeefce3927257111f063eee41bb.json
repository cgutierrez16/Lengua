{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkRequest = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst assert_js_1 = require(\"../../../utils/assert.js\");\nconst Deferred_js_1 = require(\"../../../utils/Deferred.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst NetworkUtils_js_1 = require(\"./NetworkUtils.js\");\nconst REALM_REGEX = /(?<=realm=\").*(?=\")/;\n/** Abstracts one individual network request. */\nclass NetworkRequest {\n  static unknownParameter = 'UNKNOWN';\n  /**\n   * Each network request has an associated request id, which is a string\n   * uniquely identifying that request.\n   *\n   * The identifier for a request resulting from a redirect matches that of the\n   * request that initiated it.\n   */\n  #id;\n  #fetchId;\n  /**\n   * Indicates the network intercept phase, if the request is currently blocked.\n   * Undefined necessarily implies that the request is not blocked.\n   */\n  #interceptPhase;\n  #servedFromCache = false;\n  #redirectCount;\n  #request = {};\n  #response = {};\n  #eventManager;\n  #networkStorage;\n  #cdpTarget;\n  #logger;\n  #emittedEvents = {\n    [protocol_js_1.ChromiumBidi.Network.EventNames.AuthRequired]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.BeforeRequestSent]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.FetchError]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.ResponseCompleted]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.ResponseStarted]: false\n  };\n  waitNextPhase = new Deferred_js_1.Deferred();\n  constructor(id, eventManager, networkStorage, cdpTarget, redirectCount = 0, logger) {\n    this.#id = id;\n    this.#eventManager = eventManager;\n    this.#networkStorage = networkStorage;\n    this.#cdpTarget = cdpTarget;\n    this.#redirectCount = redirectCount;\n    this.#logger = logger;\n  }\n  get id() {\n    return this.#id;\n  }\n  get fetchId() {\n    return this.#fetchId;\n  }\n  /**\n   * When blocked returns the phase for it\n   */\n  get interceptPhase() {\n    return this.#interceptPhase;\n  }\n  get url() {\n    const fragment = this.#request.info?.request.urlFragment ?? this.#request.paused?.request.urlFragment ?? '';\n    const url = this.#response.info?.url ?? this.#response.paused?.request.url ?? this.#request.auth?.request.url ?? this.#request.info?.request.url ?? this.#request.paused?.request.url ?? NetworkRequest.unknownParameter;\n    return `${url}${fragment}`;\n  }\n  get method() {\n    return this.#request.info?.request.method ?? this.#request.paused?.request.method ?? this.#request.auth?.request.method ?? this.#response.paused?.request.method ?? NetworkRequest.unknownParameter;\n  }\n  get redirectCount() {\n    return this.#redirectCount;\n  }\n  get cdpTarget() {\n    return this.#cdpTarget;\n  }\n  get cdpClient() {\n    return this.#cdpTarget.cdpClient;\n  }\n  isRedirecting() {\n    return Boolean(this.#request.info);\n  }\n  isDataUrl() {\n    return this.url.startsWith('data:');\n  }\n  #phaseChanged() {\n    this.waitNextPhase.resolve();\n    this.waitNextPhase = new Deferred_js_1.Deferred();\n  }\n  #interceptsInPhase(phase) {\n    if (!this.#cdpTarget.isSubscribedTo(`network.${phase}`)) {\n      return new Set();\n    }\n    return this.#networkStorage.getInterceptsForPhase(this, phase);\n  }\n  #isBlockedInPhase(phase) {\n    return this.#interceptsInPhase(phase).size > 0;\n  }\n  handleRedirect(event) {\n    // TODO: use event.redirectResponse;\n    // Temporary workaround to emit ResponseCompleted event for redirects\n    this.#response.hasExtraInfo = false;\n    this.#response.info = event.redirectResponse;\n    this.#emitEventsIfReady({\n      wasRedirected: true\n    });\n  }\n  #emitEventsIfReady(options = {}) {\n    const requestExtraInfoCompleted =\n    // Flush redirects\n    options.wasRedirected || options.hasFailed || this.isDataUrl() || Boolean(this.#request.extraInfo) ||\n    // Requests from cache don't have extra info\n    this.#servedFromCache ||\n    // Sometimes there is no extra info and the response\n    // is the only place we can find out\n    Boolean(this.#response.info && !this.#response.hasExtraInfo);\n    const noInterceptionExpected =\n    // We can't intercept data urls from CDP\n    this.isDataUrl() ||\n    // Cached requests never hit the network\n    this.#servedFromCache;\n    const requestInterceptionExpected = !noInterceptionExpected && this.#isBlockedInPhase(\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */);\n    const requestInterceptionCompleted = !requestInterceptionExpected || requestInterceptionExpected && Boolean(this.#request.paused);\n    if (Boolean(this.#request.info) && (requestInterceptionExpected ? requestInterceptionCompleted : requestExtraInfoCompleted)) {\n      this.#emitEvent(this.#getBeforeRequestEvent.bind(this));\n    }\n    const responseExtraInfoCompleted = Boolean(this.#response.extraInfo) ||\n    // Response from cache don't have extra info\n    this.#servedFromCache ||\n    // Don't expect extra info if the flag is false\n    Boolean(this.#response.info && !this.#response.hasExtraInfo);\n    const responseInterceptionExpected = !noInterceptionExpected && this.#isBlockedInPhase(\"responseStarted\" /* Network.InterceptPhase.ResponseStarted */);\n    if (this.#response.info || responseInterceptionExpected && Boolean(this.#response.paused)) {\n      this.#emitEvent(this.#getResponseStartedEvent.bind(this));\n    }\n    const responseInterceptionCompleted = !responseInterceptionExpected || responseInterceptionExpected && Boolean(this.#response.paused);\n    if (Boolean(this.#response.info) && responseExtraInfoCompleted && responseInterceptionCompleted) {\n      this.#emitEvent(this.#getResponseReceivedEvent.bind(this));\n    }\n  }\n  onRequestWillBeSentEvent(event) {\n    this.#request.info = event;\n    this.#emitEventsIfReady();\n  }\n  onRequestWillBeSentExtraInfoEvent(event) {\n    this.#request.extraInfo = event;\n    this.#emitEventsIfReady();\n  }\n  onResponseReceivedExtraInfoEvent(event) {\n    this.#response.extraInfo = event;\n    this.#emitEventsIfReady();\n  }\n  onResponseReceivedEvent(event) {\n    this.#response.hasExtraInfo = event.hasExtraInfo;\n    this.#response.info = event.response;\n    this.#emitEventsIfReady();\n  }\n  onServedFromCache() {\n    this.#servedFromCache = true;\n    this.#emitEventsIfReady();\n  }\n  onLoadingFailedEvent(event) {\n    this.#emitEventsIfReady({\n      hasFailed: true\n    });\n    this.#emitEvent(() => {\n      return {\n        method: protocol_js_1.ChromiumBidi.Network.EventNames.FetchError,\n        params: {\n          ...this.#getBaseEventParams(),\n          errorText: event.errorText\n        }\n      };\n    });\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-failRequest */\n  async failRequest(errorReason) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    await this.cdpClient.sendCommand('Fetch.failRequest', {\n      requestId: this.#fetchId,\n      errorReason\n    });\n    this.#interceptPhase = undefined;\n  }\n  onRequestPaused(event) {\n    this.#fetchId = event.requestId;\n    // CDP https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#event-requestPaused\n    if (event.responseStatusCode || event.responseErrorReason) {\n      this.#response.paused = event;\n      if (this.#isBlockedInPhase(\"responseStarted\" /* Network.InterceptPhase.ResponseStarted */) &&\n      // CDP may emit multiple events for a single request\n      !this.#emittedEvents[protocol_js_1.ChromiumBidi.Network.EventNames.ResponseStarted] &&\n      // Continue all response that have not enabled Network domain\n      this.#fetchId !== this.id) {\n        this.#interceptPhase = \"responseStarted\" /* Network.InterceptPhase.ResponseStarted */;\n      } else {\n        void this.continueResponse();\n      }\n    } else {\n      this.#request.paused = event;\n      if (this.#isBlockedInPhase(\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */) &&\n      // CDP may emit multiple events for a single request\n      !this.#emittedEvents[protocol_js_1.ChromiumBidi.Network.EventNames.BeforeRequestSent] &&\n      // Continue all requests that have not enabled Network domain\n      this.#fetchId !== this.id) {\n        this.#interceptPhase = \"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */;\n      } else {\n        void this.continueRequest();\n      }\n    }\n    this.#emitEventsIfReady();\n  }\n  onAuthRequired(event) {\n    this.#fetchId = event.requestId;\n    this.#request.auth = event;\n    if (this.#isBlockedInPhase(\"authRequired\" /* Network.InterceptPhase.AuthRequired */) &&\n    // Continue all auth requests that have not enabled Network domain\n    this.#fetchId !== this.id) {\n      this.#interceptPhase = \"authRequired\" /* Network.InterceptPhase.AuthRequired */;\n    } else {\n      void this.continueWithAuth();\n    }\n    this.#emitEvent(() => {\n      return {\n        method: protocol_js_1.ChromiumBidi.Network.EventNames.AuthRequired,\n        params: {\n          ...this.#getBaseEventParams(\"authRequired\" /* Network.InterceptPhase.AuthRequired */),\n          response: this.#getResponseEventParams()\n        }\n      };\n    });\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-continueRequest */\n  async continueRequest({\n    url,\n    method,\n    headers,\n    postData\n  } = {}) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    await this.cdpClient.sendCommand('Fetch.continueRequest', {\n      requestId: this.#fetchId,\n      url,\n      method,\n      headers,\n      postData\n    });\n    this.#interceptPhase = undefined;\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-continueResponse */\n  async continueResponse({\n    responseCode,\n    responsePhrase,\n    responseHeaders\n  } = {}) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    await this.cdpClient.sendCommand('Fetch.continueResponse', {\n      requestId: this.#fetchId,\n      responseCode,\n      responsePhrase,\n      responseHeaders\n    });\n    this.#interceptPhase = undefined;\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-continueWithAuth */\n  async continueWithAuth(authChallengeResponse = {\n    response: 'Default'\n  }) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    await this.cdpClient.sendCommand('Fetch.continueWithAuth', {\n      requestId: this.#fetchId,\n      authChallengeResponse\n    });\n    this.#interceptPhase = undefined;\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-provideResponse */\n  async provideResponse({\n    responseCode,\n    responsePhrase,\n    responseHeaders,\n    body\n  }) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    await this.cdpClient.sendCommand('Fetch.fulfillRequest', {\n      requestId: this.#fetchId,\n      responseCode,\n      responsePhrase,\n      responseHeaders,\n      body\n    });\n    this.#interceptPhase = undefined;\n  }\n  get #context() {\n    return this.#response.paused?.frameId ?? this.#request.info?.frameId ?? this.#request.paused?.frameId ?? this.#request.auth?.frameId ?? null;\n  }\n  /** Returns the HTTP status code associated with this request if any. */\n  get statusCode() {\n    return this.#response.paused?.responseStatusCode ?? this.#response.extraInfo?.statusCode ?? this.#response.info?.status;\n  }\n  #emitEvent(getEvent) {\n    let event;\n    try {\n      event = getEvent();\n    } catch (error) {\n      this.#logger?.(log_js_1.LogType.debugError, error);\n      return;\n    }\n    if (this.#isIgnoredEvent() || this.#emittedEvents[event.method] &&\n    // Special case this event can be emitted multiple times\n    event.method !== protocol_js_1.ChromiumBidi.Network.EventNames.AuthRequired) {\n      return;\n    }\n    this.#phaseChanged();\n    this.#emittedEvents[event.method] = true;\n    this.#eventManager.registerEvent(Object.assign(event, {\n      type: 'event'\n    }), this.#context);\n  }\n  #getBaseEventParams(phase) {\n    const interceptProps = {\n      isBlocked: false\n    };\n    if (phase) {\n      const blockedBy = this.#interceptsInPhase(phase);\n      interceptProps.isBlocked = blockedBy.size > 0;\n      if (interceptProps.isBlocked) {\n        interceptProps.intercepts = [...blockedBy];\n      }\n    }\n    return {\n      context: this.#context,\n      navigation: this.#getNavigationId(),\n      redirectCount: this.#redirectCount,\n      request: this.#getRequestData(),\n      // Timestamp should be in milliseconds, while CDP provides it in seconds.\n      timestamp: Math.round((this.#request.info?.wallTime ?? 0) * 1000),\n      // Contains isBlocked and intercepts\n      ...interceptProps\n    };\n  }\n  #getResponseEventParams() {\n    // Chromium sends wrong extraInfo events for responses served from cache.\n    // See https://github.com/puppeteer/puppeteer/issues/9965 and\n    // https://crbug.com/1340398.\n    if (this.#response.info?.fromDiskCache) {\n      this.#response.extraInfo = undefined;\n    }\n    // TODO: get headers from Fetch.requestPaused\n    const headers = (0, NetworkUtils_js_1.bidiNetworkHeadersFromCdpNetworkHeaders)(this.#response.info?.headers);\n    // TODO: get headers from Fetch.requestPaused\n    const authChallenges = this.#authChallenges(this.#response.info?.headers ?? {});\n    return {\n      url: this.url,\n      protocol: this.#response.info?.protocol ?? '',\n      status: this.statusCode ?? -1,\n      // TODO: Throw an exception or use some other status code?\n      statusText: this.#response.info?.statusText || this.#response.paused?.responseStatusText || '',\n      fromCache: this.#response.info?.fromDiskCache || this.#response.info?.fromPrefetchCache || this.#servedFromCache,\n      headers,\n      mimeType: this.#response.info?.mimeType || '',\n      bytesReceived: this.#response.info?.encodedDataLength || 0,\n      headersSize: (0, NetworkUtils_js_1.computeHeadersSize)(headers),\n      // TODO: consider removing from spec.\n      bodySize: 0,\n      content: {\n        // TODO: consider removing from spec.\n        size: 0\n      },\n      ...(authChallenges ? {\n        authChallenges\n      } : {})\n    };\n  }\n  #getNavigationId() {\n    if (!this.#request.info || !this.#request.info.loaderId ||\n    // When we navigate all CDP network events have `loaderId`\n    // CDP's `loaderId` and `requestId` match when\n    // that request triggered the loading\n    this.#request.info.loaderId !== this.#request.info.requestId) {\n      return null;\n    }\n    return this.#request.info.loaderId;\n  }\n  #getRequestData() {\n    const cookies = this.#request.extraInfo ? NetworkRequest.#getCookies(this.#request.extraInfo.associatedCookies) : [];\n    const headers = (0, NetworkUtils_js_1.bidiNetworkHeadersFromCdpNetworkHeaders)(this.#request.info?.request.headers);\n    return {\n      request: this.#id,\n      url: this.url,\n      method: this.method,\n      headers,\n      cookies,\n      headersSize: (0, NetworkUtils_js_1.computeHeadersSize)(headers),\n      // TODO: implement.\n      bodySize: 0,\n      timings: this.#getTimings()\n    };\n  }\n  // TODO: implement.\n  #getTimings() {\n    return {\n      timeOrigin: 0,\n      requestTime: 0,\n      redirectStart: 0,\n      redirectEnd: 0,\n      fetchStart: 0,\n      dnsStart: 0,\n      dnsEnd: 0,\n      connectStart: 0,\n      connectEnd: 0,\n      tlsStart: 0,\n      requestStart: 0,\n      responseStart: 0,\n      responseEnd: 0\n    };\n  }\n  #getBeforeRequestEvent() {\n    (0, assert_js_1.assert)(this.#request.info, 'RequestWillBeSentEvent is not set');\n    return {\n      method: protocol_js_1.ChromiumBidi.Network.EventNames.BeforeRequestSent,\n      params: {\n        ...this.#getBaseEventParams(\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */),\n        initiator: {\n          type: NetworkRequest.#getInitiatorType(this.#request.info.initiator.type),\n          columnNumber: this.#request.info.initiator.columnNumber,\n          lineNumber: this.#request.info.initiator.lineNumber,\n          stackTrace: this.#request.info.initiator.stack,\n          request: this.#request.info.initiator.requestId\n        }\n      }\n    };\n  }\n  #getResponseStartedEvent() {\n    (0, assert_js_1.assert)(this.#request.info, 'RequestWillBeSentEvent is not set');\n    (0, assert_js_1.assert)(\n    // The response paused comes before any data for the response\n    this.#response.paused || this.#response.info, 'ResponseReceivedEvent is not set');\n    return {\n      method: protocol_js_1.ChromiumBidi.Network.EventNames.ResponseStarted,\n      params: {\n        ...this.#getBaseEventParams(\"responseStarted\" /* Network.InterceptPhase.ResponseStarted */),\n        response: this.#getResponseEventParams()\n      }\n    };\n  }\n  #getResponseReceivedEvent() {\n    (0, assert_js_1.assert)(this.#request.info, 'RequestWillBeSentEvent is not set');\n    (0, assert_js_1.assert)(this.#response.info, 'ResponseReceivedEvent is not set');\n    return {\n      method: protocol_js_1.ChromiumBidi.Network.EventNames.ResponseCompleted,\n      params: {\n        ...this.#getBaseEventParams(),\n        response: this.#getResponseEventParams()\n      }\n    };\n  }\n  #isIgnoredEvent() {\n    const faviconUrl = '/favicon.ico';\n    return this.#request.paused?.request.url.endsWith(faviconUrl) ?? this.#request.info?.request.url.endsWith(faviconUrl) ?? false;\n  }\n  #authChallenges(headers) {\n    if (!(this.statusCode === 401 || this.statusCode === 407)) {\n      return undefined;\n    }\n    const headerName = this.statusCode === 401 ? 'WWW-Authenticate' : 'Proxy-Authenticate';\n    const authChallenges = [];\n    for (const [header, value] of Object.entries(headers)) {\n      // TODO: Do a proper match based on https://httpwg.org/specs/rfc9110.html#credentials\n      // Or verify this works\n      if (header.localeCompare(headerName, undefined, {\n        sensitivity: 'base'\n      }) === 0) {\n        authChallenges.push({\n          scheme: value.split(' ').at(0) ?? '',\n          realm: value.match(REALM_REGEX)?.at(0) ?? ''\n        });\n      }\n    }\n    return authChallenges;\n  }\n  static #getInitiatorType(initiatorType) {\n    switch (initiatorType) {\n      case 'parser':\n      case 'script':\n      case 'preflight':\n        return initiatorType;\n      default:\n        return 'other';\n    }\n  }\n  static #getCookies(associatedCookies) {\n    return associatedCookies.filter(({\n      blockedReasons\n    }) => {\n      return !Array.isArray(blockedReasons) || blockedReasons.length === 0;\n    }).map(({\n      cookie\n    }) => (0, NetworkUtils_js_1.cdpToBiDiCookie)(cookie));\n  }\n}\nexports.NetworkRequest = NetworkRequest;","map":{"version":3,"names":["protocol_js_1","require","assert_js_1","Deferred_js_1","log_js_1","NetworkUtils_js_1","REALM_REGEX","NetworkRequest","unknownParameter","id","fetchId","interceptPhase","servedFromCache","redirectCount","request","response","eventManager","networkStorage","cdpTarget","logger","emittedEvents","ChromiumBidi","Network","EventNames","AuthRequired","BeforeRequestSent","FetchError","ResponseCompleted","ResponseStarted","waitNextPhase","Deferred","constructor","url","fragment","info","urlFragment","paused","auth","method","cdpClient","isRedirecting","Boolean","isDataUrl","startsWith","phaseChanged","#phaseChanged","resolve","interceptsInPhase","#interceptsInPhase","phase","isSubscribedTo","Set","getInterceptsForPhase","isBlockedInPhase","#isBlockedInPhase","size","handleRedirect","event","hasExtraInfo","redirectResponse","emitEventsIfReady","wasRedirected","#emitEventsIfReady","options","requestExtraInfoCompleted","hasFailed","extraInfo","noInterceptionExpected","requestInterceptionExpected","requestInterceptionCompleted","emitEvent","getBeforeRequestEvent","bind","responseExtraInfoCompleted","responseInterceptionExpected","getResponseStartedEvent","responseInterceptionCompleted","getResponseReceivedEvent","onRequestWillBeSentEvent","onRequestWillBeSentExtraInfoEvent","onResponseReceivedExtraInfoEvent","onResponseReceivedEvent","onServedFromCache","onLoadingFailedEvent","params","getBaseEventParams","errorText","failRequest","errorReason","assert","sendCommand","requestId","undefined","onRequestPaused","responseStatusCode","responseErrorReason","continueResponse","continueRequest","onAuthRequired","continueWithAuth","getResponseEventParams","headers","postData","responseCode","responsePhrase","responseHeaders","authChallengeResponse","provideResponse","body","context","#context","frameId","statusCode","status","#emitEvent","getEvent","error","LogType","debugError","isIgnoredEvent","registerEvent","Object","assign","type","#getBaseEventParams","interceptProps","isBlocked","blockedBy","intercepts","navigation","getNavigationId","getRequestData","timestamp","Math","round","wallTime","#getResponseEventParams","fromDiskCache","bidiNetworkHeadersFromCdpNetworkHeaders","authChallenges","protocol","statusText","responseStatusText","fromCache","fromPrefetchCache","mimeType","bytesReceived","encodedDataLength","headersSize","computeHeadersSize","bodySize","content","#getNavigationId","loaderId","#getRequestData","cookies","getCookies","associatedCookies","timings","getTimings","#getTimings","timeOrigin","requestTime","redirectStart","redirectEnd","fetchStart","dnsStart","dnsEnd","connectStart","connectEnd","tlsStart","requestStart","responseStart","responseEnd","#getBeforeRequestEvent","initiator","getInitiatorType","columnNumber","lineNumber","stackTrace","stack","#getResponseStartedEvent","#getResponseReceivedEvent","#isIgnoredEvent","faviconUrl","endsWith","#authChallenges","headerName","header","value","entries","localeCompare","sensitivity","push","scheme","split","at","realm","match","#getInitiatorType","initiatorType","#getCookies","filter","blockedReasons","Array","isArray","length","map","cookie","cdpToBiDiCookie","exports"],"sources":["../../../../../src/bidiMapper/modules/network/NetworkRequest.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}