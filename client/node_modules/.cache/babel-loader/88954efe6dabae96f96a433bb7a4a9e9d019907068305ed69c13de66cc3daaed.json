{"ast":null,"code":"\"use strict\";\n\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiHTTPRequest = exports.requests = void 0;\nconst HTTPRequest_js_1 = require(\"../api/HTTPRequest.js\");\nconst Errors_js_1 = require(\"../common/Errors.js\");\nconst HTTPResponse_js_1 = require(\"./HTTPResponse.js\");\nexports.requests = new WeakMap();\n/**\n * @internal\n */\nclass BidiHTTPRequest extends HTTPRequest_js_1.HTTPRequest {\n  static from(bidiRequest, frame, redirect) {\n    const request = new _a(bidiRequest, frame, redirect);\n    request.#initialize();\n    return request;\n  }\n  #redirectBy;\n  #response = null;\n  id;\n  #frame;\n  #request;\n  constructor(request, frame, redirectBy) {\n    super();\n    exports.requests.set(request, this);\n    this.interception.enabled = request.isBlocked;\n    this.#request = request;\n    this.#frame = frame;\n    this.#redirectBy = redirectBy;\n    this.id = request.id;\n  }\n  get client() {\n    return this.#frame.client;\n  }\n  #initialize() {\n    this.#request.on('redirect', request => {\n      const httpRequest = _a.from(request, this.#frame, this);\n      void httpRequest.finalizeInterceptions();\n    });\n    this.#request.once('success', data => {\n      this.#response = HTTPResponse_js_1.BidiHTTPResponse.from(data, this);\n    });\n    this.#request.on('authenticate', this.#handleAuthentication);\n    this.#frame.page().trustedEmitter.emit(\"request\" /* PageEvent.Request */, this);\n    if (Object.keys(this.#extraHTTPHeaders).length) {\n      this.interception.handlers.push(async () => {\n        await this.continue({\n          headers: this.headers()\n        }, 0);\n      });\n    }\n  }\n  url() {\n    return this.#request.url;\n  }\n  resourceType() {\n    throw new Errors_js_1.UnsupportedOperation();\n  }\n  method() {\n    return this.#request.method;\n  }\n  postData() {\n    throw new Errors_js_1.UnsupportedOperation();\n  }\n  hasPostData() {\n    throw new Errors_js_1.UnsupportedOperation();\n  }\n  async fetchPostData() {\n    throw new Errors_js_1.UnsupportedOperation();\n  }\n  get #extraHTTPHeaders() {\n    return this.#frame?.page()._extraHTTPHeaders ?? {};\n  }\n  headers() {\n    const headers = {};\n    for (const header of this.#request.headers) {\n      headers[header.name.toLowerCase()] = header.value.value;\n    }\n    return {\n      ...headers,\n      ...this.#extraHTTPHeaders\n    };\n  }\n  response() {\n    return this.#response;\n  }\n  failure() {\n    if (this.#request.error === undefined) {\n      return null;\n    }\n    return {\n      errorText: this.#request.error\n    };\n  }\n  isNavigationRequest() {\n    return this.#request.navigation !== undefined;\n  }\n  initiator() {\n    return this.#request.initiator;\n  }\n  redirectChain() {\n    if (this.#redirectBy === undefined) {\n      return [];\n    }\n    const redirects = [this.#redirectBy];\n    for (const redirect of redirects) {\n      if (redirect.#redirectBy !== undefined) {\n        redirects.push(redirect.#redirectBy);\n      }\n    }\n    return redirects;\n  }\n  frame() {\n    return this.#frame;\n  }\n  async continue(overrides, priority) {\n    return await super.continue({\n      headers: Object.keys(this.#extraHTTPHeaders).length ? this.headers() : undefined,\n      ...overrides\n    }, priority);\n  }\n  async _continue(overrides = {}) {\n    const headers = getBidiHeaders(overrides.headers);\n    this.interception.handled = true;\n    return await this.#request.continueRequest({\n      url: overrides.url,\n      method: overrides.method,\n      body: overrides.postData ? {\n        type: 'base64',\n        value: btoa(overrides.postData)\n      } : undefined,\n      headers: headers.length > 0 ? headers : undefined\n    }).catch(error => {\n      this.interception.handled = false;\n      return (0, HTTPRequest_js_1.handleError)(error);\n    });\n  }\n  async _abort() {\n    this.interception.handled = true;\n    return await this.#request.failRequest().catch(error => {\n      this.interception.handled = false;\n      throw error;\n    });\n  }\n  async _respond(response, _priority) {\n    this.interception.handled = true;\n    const responseBody = response.body && response.body instanceof Uint8Array ? response.body.toString('base64') : response.body ? btoa(response.body) : undefined;\n    const headers = getBidiHeaders(response.headers);\n    const hasContentLength = headers.some(header => {\n      return header.name === 'content-length';\n    });\n    if (response.contentType) {\n      headers.push({\n        name: 'content-type',\n        value: {\n          type: 'string',\n          value: response.contentType\n        }\n      });\n    }\n    if (responseBody && !hasContentLength) {\n      const encoder = new TextEncoder();\n      headers.push({\n        name: 'content-length',\n        value: {\n          type: 'string',\n          value: String(encoder.encode(responseBody).byteLength)\n        }\n      });\n    }\n    const status = response.status || 200;\n    return await this.#request.provideResponse({\n      statusCode: status,\n      headers: headers.length > 0 ? headers : undefined,\n      reasonPhrase: HTTPRequest_js_1.STATUS_TEXTS[status],\n      body: responseBody ? {\n        type: 'base64',\n        value: responseBody\n      } : undefined\n    }).catch(error => {\n      this.interception.handled = false;\n      throw error;\n    });\n  }\n  #authenticationHandled = false;\n  #handleAuthentication = async () => {\n    if (!this.#frame) {\n      return;\n    }\n    const credentials = this.#frame.page()._credentials;\n    if (credentials && !this.#authenticationHandled) {\n      this.#authenticationHandled = true;\n      void this.#request.continueWithAuth({\n        action: 'provideCredentials',\n        credentials: {\n          type: 'password',\n          username: credentials.username,\n          password: credentials.password\n        }\n      });\n    } else {\n      void this.#request.continueWithAuth({\n        action: 'cancel'\n      });\n    }\n  };\n}\nexports.BidiHTTPRequest = BidiHTTPRequest;\n_a = BidiHTTPRequest;\nfunction getBidiHeaders(rawHeaders) {\n  const headers = [];\n  for (const [name, value] of Object.entries(rawHeaders ?? [])) {\n    if (!Object.is(value, undefined)) {\n      const values = Array.isArray(value) ? value : [value];\n      for (const value of values) {\n        headers.push({\n          name: name.toLowerCase(),\n          value: {\n            type: 'string',\n            value: String(value)\n          }\n        });\n      }\n    }\n  }\n  return headers;\n}","map":{"version":3,"names":["HTTPRequest_js_1","require","Errors_js_1","HTTPResponse_js_1","exports","requests","WeakMap","BidiHTTPRequest","HTTPRequest","from","bidiRequest","frame","redirect","request","_a","initialize","redirectBy","response","id","constructor","set","interception","enabled","isBlocked","client","#initialize","on","httpRequest","finalizeInterceptions","once","data","BidiHTTPResponse","handleAuthentication","page","trustedEmitter","emit","Object","keys","extraHTTPHeaders","length","handlers","push","continue","headers","url","resourceType","UnsupportedOperation","method","postData","hasPostData","fetchPostData","#extraHTTPHeaders","_extraHTTPHeaders","header","name","toLowerCase","value","failure","error","undefined","errorText","isNavigationRequest","navigation","initiator","redirectChain","redirects","overrides","priority","_continue","getBidiHeaders","handled","continueRequest","body","type","btoa","catch","handleError","_abort","failRequest","_respond","_priority","responseBody","Uint8Array","toString","hasContentLength","some","contentType","encoder","TextEncoder","String","encode","byteLength","status","provideResponse","statusCode","reasonPhrase","STATUS_TEXTS","authenticationHandled","#handleAuthentication","credentials","_credentials","continueWithAuth","action","username","password","rawHeaders","entries","is","values","Array","isArray"],"sources":["/Users/carlosgutierrez/Documents/React/spanish/node_modules/puppeteer-core/src/bidi/HTTPRequest.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport type * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport type {CDPSession} from '../api/CDPSession.js';\nimport type {\n  ContinueRequestOverrides,\n  ResponseForRequest,\n} from '../api/HTTPRequest.js';\nimport {\n  HTTPRequest,\n  STATUS_TEXTS,\n  type ResourceType,\n  handleError,\n} from '../api/HTTPRequest.js';\nimport {PageEvent} from '../api/Page.js';\nimport {UnsupportedOperation} from '../common/Errors.js';\n\nimport type {Request} from './core/Request.js';\nimport type {BidiFrame} from './Frame.js';\nimport {BidiHTTPResponse} from './HTTPResponse.js';\n\nexport const requests = new WeakMap<Request, BidiHTTPRequest>();\n\n/**\n * @internal\n */\nexport class BidiHTTPRequest extends HTTPRequest {\n  static from(\n    bidiRequest: Request,\n    frame: BidiFrame,\n    redirect?: BidiHTTPRequest\n  ): BidiHTTPRequest {\n    const request = new BidiHTTPRequest(bidiRequest, frame, redirect);\n    request.#initialize();\n    return request;\n  }\n  #redirectBy: BidiHTTPRequest | undefined;\n  #response: BidiHTTPResponse | null = null;\n  override readonly id: string;\n  readonly #frame: BidiFrame;\n  readonly #request: Request;\n\n  private constructor(\n    request: Request,\n    frame: BidiFrame,\n    redirectBy?: BidiHTTPRequest\n  ) {\n    super();\n    requests.set(request, this);\n\n    this.interception.enabled = request.isBlocked;\n\n    this.#request = request;\n    this.#frame = frame;\n    this.#redirectBy = redirectBy;\n    this.id = request.id;\n  }\n\n  override get client(): CDPSession {\n    return this.#frame.client;\n  }\n\n  #initialize() {\n    this.#request.on('redirect', request => {\n      const httpRequest = BidiHTTPRequest.from(request, this.#frame, this);\n      void httpRequest.finalizeInterceptions();\n    });\n    this.#request.once('success', data => {\n      this.#response = BidiHTTPResponse.from(data, this);\n    });\n    this.#request.on('authenticate', this.#handleAuthentication);\n\n    this.#frame.page().trustedEmitter.emit(PageEvent.Request, this);\n\n    if (Object.keys(this.#extraHTTPHeaders).length) {\n      this.interception.handlers.push(async () => {\n        await this.continue(\n          {\n            headers: this.headers(),\n          },\n          0\n        );\n      });\n    }\n  }\n\n  override url(): string {\n    return this.#request.url;\n  }\n\n  override resourceType(): ResourceType {\n    throw new UnsupportedOperation();\n  }\n\n  override method(): string {\n    return this.#request.method;\n  }\n\n  override postData(): string | undefined {\n    throw new UnsupportedOperation();\n  }\n\n  override hasPostData(): boolean {\n    throw new UnsupportedOperation();\n  }\n\n  override async fetchPostData(): Promise<string | undefined> {\n    throw new UnsupportedOperation();\n  }\n\n  get #extraHTTPHeaders(): Record<string, string> {\n    return this.#frame?.page()._extraHTTPHeaders ?? {};\n  }\n\n  override headers(): Record<string, string> {\n    const headers: Record<string, string> = {};\n    for (const header of this.#request.headers) {\n      headers[header.name.toLowerCase()] = header.value.value;\n    }\n    return {\n      ...headers,\n      ...this.#extraHTTPHeaders,\n    };\n  }\n\n  override response(): BidiHTTPResponse | null {\n    return this.#response;\n  }\n\n  override failure(): {errorText: string} | null {\n    if (this.#request.error === undefined) {\n      return null;\n    }\n    return {errorText: this.#request.error};\n  }\n\n  override isNavigationRequest(): boolean {\n    return this.#request.navigation !== undefined;\n  }\n\n  override initiator(): Bidi.Network.Initiator {\n    return this.#request.initiator;\n  }\n\n  override redirectChain(): BidiHTTPRequest[] {\n    if (this.#redirectBy === undefined) {\n      return [];\n    }\n    const redirects = [this.#redirectBy];\n    for (const redirect of redirects) {\n      if (redirect.#redirectBy !== undefined) {\n        redirects.push(redirect.#redirectBy);\n      }\n    }\n    return redirects;\n  }\n\n  override frame(): BidiFrame {\n    return this.#frame;\n  }\n\n  override async continue(\n    overrides?: ContinueRequestOverrides,\n    priority?: number | undefined\n  ): Promise<void> {\n    return await super.continue(\n      {\n        headers: Object.keys(this.#extraHTTPHeaders).length\n          ? this.headers()\n          : undefined,\n        ...overrides,\n      },\n      priority\n    );\n  }\n\n  override async _continue(\n    overrides: ContinueRequestOverrides = {}\n  ): Promise<void> {\n    const headers: Bidi.Network.Header[] = getBidiHeaders(overrides.headers);\n    this.interception.handled = true;\n\n    return await this.#request\n      .continueRequest({\n        url: overrides.url,\n        method: overrides.method,\n        body: overrides.postData\n          ? {\n              type: 'base64',\n              value: btoa(overrides.postData),\n            }\n          : undefined,\n        headers: headers.length > 0 ? headers : undefined,\n      })\n      .catch(error => {\n        this.interception.handled = false;\n        return handleError(error);\n      });\n  }\n\n  override async _abort(): Promise<void> {\n    this.interception.handled = true;\n    return await this.#request.failRequest().catch(error => {\n      this.interception.handled = false;\n      throw error;\n    });\n  }\n\n  override async _respond(\n    response: Partial<ResponseForRequest>,\n    _priority?: number\n  ): Promise<void> {\n    this.interception.handled = true;\n    const responseBody: string | undefined =\n      response.body && response.body instanceof Uint8Array\n        ? response.body.toString('base64')\n        : response.body\n          ? btoa(response.body)\n          : undefined;\n\n    const headers: Bidi.Network.Header[] = getBidiHeaders(response.headers);\n    const hasContentLength = headers.some(header => {\n      return header.name === 'content-length';\n    });\n\n    if (response.contentType) {\n      headers.push({\n        name: 'content-type',\n        value: {\n          type: 'string',\n          value: response.contentType,\n        },\n      });\n    }\n\n    if (responseBody && !hasContentLength) {\n      const encoder = new TextEncoder();\n      headers.push({\n        name: 'content-length',\n        value: {\n          type: 'string',\n          value: String(encoder.encode(responseBody).byteLength),\n        },\n      });\n    }\n    const status = response.status || 200;\n\n    return await this.#request\n      .provideResponse({\n        statusCode: status,\n        headers: headers.length > 0 ? headers : undefined,\n        reasonPhrase: STATUS_TEXTS[status],\n        body: responseBody\n          ? {\n              type: 'base64',\n              value: responseBody,\n            }\n          : undefined,\n      })\n      .catch(error => {\n        this.interception.handled = false;\n        throw error;\n      });\n  }\n\n  #authenticationHandled = false;\n  #handleAuthentication = async () => {\n    if (!this.#frame) {\n      return;\n    }\n    const credentials = this.#frame.page()._credentials;\n    if (credentials && !this.#authenticationHandled) {\n      this.#authenticationHandled = true;\n      void this.#request.continueWithAuth({\n        action: 'provideCredentials',\n        credentials: {\n          type: 'password',\n          username: credentials.username,\n          password: credentials.password,\n        },\n      });\n    } else {\n      void this.#request.continueWithAuth({\n        action: 'cancel',\n      });\n    }\n  };\n}\n\nfunction getBidiHeaders(rawHeaders?: Record<string, unknown>) {\n  const headers: Bidi.Network.Header[] = [];\n  for (const [name, value] of Object.entries(rawHeaders ?? [])) {\n    if (!Object.is(value, undefined)) {\n      const values = Array.isArray(value) ? value : [value];\n\n      for (const value of values) {\n        headers.push({\n          name: name.toLowerCase(),\n          value: {\n            type: 'string',\n            value: String(value),\n          },\n        });\n      }\n    }\n  }\n\n  return headers;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}