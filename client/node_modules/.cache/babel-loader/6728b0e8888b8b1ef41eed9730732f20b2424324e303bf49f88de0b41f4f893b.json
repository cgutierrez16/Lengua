{"ast":null,"code":"var _jsxFileName = \"/Users/carlosgutierrez/Documents/React/spanish/client/src/misc/hugging.jsx\";\nimport React from \"react\";\nimport { HfInference } from \"@huggingface/inference\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Hugging = async () => {\n  const apiKey = process.env.REACT_APP_HUGGING_FACE_TOKEN;\n  const hf = new HfInference('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');\n  let sentenceSimilarityRes = await hf.sentenceSimilarity({\n    model: \"sentence-transformers/paraphrase-xlm-r-multilingual-v1\",\n    inputs: {\n      source_sentence: \"That is a happy person\",\n      sentences: [\"That is a happy dog\", \"That is a very happy person\", \"Today is a sunny day\"]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"balls lol hug\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Hugging;\nvar _c;\n$RefreshReg$(_c, \"Hugging\");","map":{"version":3,"names":["React","HfInference","jsxDEV","_jsxDEV","Hugging","apiKey","process","env","REACT_APP_HUGGING_FACE_TOKEN","hf","sentenceSimilarityRes","sentenceSimilarity","model","inputs","source_sentence","sentences","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlosgutierrez/Documents/React/spanish/client/src/misc/hugging.jsx"],"sourcesContent":["import React from \"react\";\nimport { HfInference } from \"@huggingface/inference\";\n\nexport const Hugging = async () => {\n  const apiKey = process.env.REACT_APP_HUGGING_FACE_TOKEN;\n  const hf = new HfInference('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');\n\n  let sentenceSimilarityRes = await hf.sentenceSimilarity({\n    model: \"sentence-transformers/paraphrase-xlm-r-multilingual-v1\",\n    inputs: {\n      source_sentence: \"That is a happy person\",\n      sentences: [\n        \"That is a happy dog\",\n        \"That is a very happy person\",\n        \"Today is a sunny day\",\n      ],\n    },\n  });\n  return (\n    <div>\n      <h2>balls lol hug</h2>\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,4BAA4B;EACvD,MAAMC,EAAE,GAAG,IAAIR,WAAW,CAAC,uCAAuC,CAAC;EAEnE,IAAIS,qBAAqB,GAAG,MAAMD,EAAE,CAACE,kBAAkB,CAAC;IACtDC,KAAK,EAAE,wDAAwD;IAC/DC,MAAM,EAAE;MACNC,eAAe,EAAE,wBAAwB;MACzCC,SAAS,EAAE,CACT,qBAAqB,EACrB,6BAA6B,EAC7B,sBAAsB;IAE1B;EACF,CAAC,CAAC;EACF,oBACEZ,OAAA;IAAAa,QAAA,eACEb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACC,EAAA,GApBWjB,OAAO;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}