{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StorageProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst assert_js_1 = require(\"../../../utils/assert.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst NetworkProcessor_js_1 = require(\"../network/NetworkProcessor.js\");\nconst NetworkUtils_js_1 = require(\"../network/NetworkUtils.js\");\n/**\n * Responsible for handling the `storage` domain.\n */\nclass StorageProcessor {\n  #browserCdpClient;\n  #browsingContextStorage;\n  #logger;\n  constructor(browserCdpClient, browsingContextStorage, logger) {\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#browserCdpClient = browserCdpClient;\n    this.#logger = logger;\n  }\n  async deleteCookies(params) {\n    const partitionKey = this.#expandStoragePartitionSpec(params.partition);\n    let cdpResponse;\n    try {\n      cdpResponse = await this.#browserCdpClient.sendCommand('Storage.getCookies', {\n        browserContextId: this.#getCdpBrowserContextId(partitionKey)\n      });\n    } catch (err) {\n      if (this.#isNoSuchUserContextError(err)) {\n        // If the user context is not found, special error is thrown.\n        throw new protocol_js_1.NoSuchUserContextException(err.message);\n      }\n      throw err;\n    }\n    const cdpCookiesToDelete = cdpResponse.cookies.filter(\n    // CDP's partition key is the source origin. If the request specifies the\n    // `sourceOrigin` partition key, only cookies with the requested source origin\n    // are returned.\n    c => partitionKey.sourceOrigin === undefined || c.partitionKey === partitionKey.sourceOrigin).filter(cdpCookie => {\n      const bidiCookie = (0, NetworkUtils_js_1.cdpToBiDiCookie)(cdpCookie);\n      return this.#matchCookie(bidiCookie, params.filter);\n    }).map(cookie => ({\n      ...cookie,\n      // Set expiry to pass date to delete the cookie.\n      expires: 1\n    }));\n    await this.#browserCdpClient.sendCommand('Storage.setCookies', {\n      cookies: cdpCookiesToDelete,\n      browserContextId: this.#getCdpBrowserContextId(partitionKey)\n    });\n    return {\n      partitionKey\n    };\n  }\n  async getCookies(params) {\n    const partitionKey = this.#expandStoragePartitionSpec(params.partition);\n    let cdpResponse;\n    try {\n      cdpResponse = await this.#browserCdpClient.sendCommand('Storage.getCookies', {\n        browserContextId: this.#getCdpBrowserContextId(partitionKey)\n      });\n    } catch (err) {\n      if (this.#isNoSuchUserContextError(err)) {\n        // If the user context is not found, special error is thrown.\n        throw new protocol_js_1.NoSuchUserContextException(err.message);\n      }\n      throw err;\n    }\n    const filteredBiDiCookies = cdpResponse.cookies.filter(\n    // CDP's partition key is the source origin. If the request specifies the\n    // `sourceOrigin` partition key, only cookies with the requested source origin\n    // are returned.\n    c => partitionKey.sourceOrigin === undefined || c.partitionKey === partitionKey.sourceOrigin).map(c => (0, NetworkUtils_js_1.cdpToBiDiCookie)(c)).filter(c => this.#matchCookie(c, params.filter));\n    return {\n      cookies: filteredBiDiCookies,\n      partitionKey\n    };\n  }\n  async setCookie(params) {\n    const partitionKey = this.#expandStoragePartitionSpec(params.partition);\n    const cdpCookie = (0, NetworkUtils_js_1.bidiToCdpCookie)(params, partitionKey);\n    try {\n      await this.#browserCdpClient.sendCommand('Storage.setCookies', {\n        cookies: [cdpCookie],\n        browserContextId: this.#getCdpBrowserContextId(partitionKey)\n      });\n    } catch (err) {\n      if (this.#isNoSuchUserContextError(err)) {\n        // If the user context is not found, special error is thrown.\n        throw new protocol_js_1.NoSuchUserContextException(err.message);\n      }\n      this.#logger?.(log_js_1.LogType.debugError, err);\n      throw new protocol_js_1.UnableToSetCookieException(err.toString());\n    }\n    return {\n      partitionKey\n    };\n  }\n  #isNoSuchUserContextError(err) {\n    // Heuristic to detect if the user context is not found.\n    // See https://source.chromium.org/chromium/chromium/src/+/main:content/browser/devtools/protocol/browser_handler.cc;drc=a56154dd81e4679712422ac6eed2c9581cb51ab0;l=314\n    return err.message?.startsWith('Failed to find browser context for id');\n  }\n  #getCdpBrowserContextId(partitionKey) {\n    return partitionKey.userContext === 'default' ? undefined : partitionKey.userContext;\n  }\n  #expandStoragePartitionSpecByBrowsingContext(descriptor) {\n    const browsingContextId = descriptor.context;\n    const browsingContext = this.#browsingContextStorage.getContext(browsingContextId);\n    // https://w3c.github.io/webdriver-bidi/#associated-storage-partition.\n    // Each browsing context also has an associated storage partition, which is the\n    // storage partition it uses to persist data. In Chromium it's a `BrowserContext`\n    // which maps to BiDi `UserContext`.\n    return {\n      userContext: browsingContext.userContext\n    };\n  }\n  #expandStoragePartitionSpecByStorageKey(descriptor) {\n    const unsupportedPartitionKeys = new Map();\n    let sourceOrigin = descriptor.sourceOrigin;\n    if (sourceOrigin !== undefined) {\n      const url = NetworkProcessor_js_1.NetworkProcessor.parseUrlString(sourceOrigin);\n      if (url.origin === 'null') {\n        // Origin `null` is a special case for local pages.\n        sourceOrigin = url.origin;\n      } else {\n        // Port is not supported in CDP Cookie's `partitionKey`, so it should be stripped\n        // from the requested source origin.\n        sourceOrigin = `${url.protocol}//${url.hostname}`;\n      }\n    }\n    for (const [key, value] of Object.entries(descriptor)) {\n      if (key !== undefined && value !== undefined && !['type', 'sourceOrigin', 'userContext'].includes(key)) {\n        unsupportedPartitionKeys.set(key, value);\n      }\n    }\n    if (unsupportedPartitionKeys.size > 0) {\n      this.#logger?.(log_js_1.LogType.debugInfo, `Unsupported partition keys: ${JSON.stringify(Object.fromEntries(unsupportedPartitionKeys))}`);\n    }\n    // Set `userContext` to `default` if not provided, as it's required in Chromium.\n    const userContext = descriptor.userContext ?? 'default';\n    return {\n      userContext,\n      ...(sourceOrigin === undefined ? {} : {\n        sourceOrigin\n      })\n    };\n  }\n  #expandStoragePartitionSpec(partitionSpec) {\n    if (partitionSpec === undefined) {\n      // `userContext` is required in Chromium.\n      return {\n        userContext: 'default'\n      };\n    }\n    if (partitionSpec.type === 'context') {\n      return this.#expandStoragePartitionSpecByBrowsingContext(partitionSpec);\n    }\n    (0, assert_js_1.assert)(partitionSpec.type === 'storageKey', 'Unknown partition type');\n    // Partition spec is a storage partition.\n    // Let partition key be partition spec.\n    return this.#expandStoragePartitionSpecByStorageKey(partitionSpec);\n  }\n  #matchCookie(cookie, filter) {\n    if (filter === undefined) {\n      return true;\n    }\n    return (filter.domain === undefined || filter.domain === cookie.domain) && (filter.name === undefined || filter.name === cookie.name) && (\n    // `value` contains fields `type` and `value`.\n    filter.value === undefined || (0, NetworkUtils_js_1.deserializeByteValue)(filter.value) === (0, NetworkUtils_js_1.deserializeByteValue)(cookie.value)) && (filter.path === undefined || filter.path === cookie.path) && (filter.size === undefined || filter.size === cookie.size) && (filter.httpOnly === undefined || filter.httpOnly === cookie.httpOnly) && (filter.secure === undefined || filter.secure === cookie.secure) && (filter.sameSite === undefined || filter.sameSite === cookie.sameSite) && (filter.expiry === undefined || filter.expiry === cookie.expiry);\n  }\n}\nexports.StorageProcessor = StorageProcessor;","map":{"version":3,"names":["protocol_js_1","require","assert_js_1","log_js_1","NetworkProcessor_js_1","NetworkUtils_js_1","StorageProcessor","browserCdpClient","browsingContextStorage","logger","constructor","deleteCookies","params","partitionKey","expandStoragePartitionSpec","partition","cdpResponse","sendCommand","browserContextId","getCdpBrowserContextId","err","isNoSuchUserContextError","NoSuchUserContextException","message","cdpCookiesToDelete","cookies","filter","c","sourceOrigin","undefined","cdpCookie","bidiCookie","cdpToBiDiCookie","matchCookie","map","cookie","expires","getCookies","filteredBiDiCookies","setCookie","bidiToCdpCookie","LogType","debugError","UnableToSetCookieException","toString","#isNoSuchUserContextError","startsWith","#getCdpBrowserContextId","userContext","expandStoragePartitionSpecByBrowsingContext","#expandStoragePartitionSpecByBrowsingContext","descriptor","browsingContextId","context","browsingContext","getContext","expandStoragePartitionSpecByStorageKey","#expandStoragePartitionSpecByStorageKey","unsupportedPartitionKeys","Map","url","NetworkProcessor","parseUrlString","origin","protocol","hostname","key","value","Object","entries","includes","set","size","debugInfo","JSON","stringify","fromEntries","#expandStoragePartitionSpec","partitionSpec","type","assert","#matchCookie","domain","name","deserializeByteValue","path","httpOnly","secure","sameSite","expiry","exports"],"sources":["../../../../../src/bidiMapper/modules/storage/StorageProcessor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}