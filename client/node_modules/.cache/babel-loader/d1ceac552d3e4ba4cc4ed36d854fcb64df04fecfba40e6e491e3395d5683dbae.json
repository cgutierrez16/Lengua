{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __addDisposableResource = this && this.__addDisposableResource || function (env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({\n      value: value,\n      dispose: dispose,\n      async: async\n    });\n  } else if (async) {\n    env.stack.push({\n      async: true\n    });\n  }\n  return value;\n};\nvar __disposeResources = this && this.__disposeResources || function (SuppressedError) {\n  return function (env) {\n    function fail(e) {\n      env.error = env.hasError ? new SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    function next() {\n      while (env.stack.length) {\n        var rec = env.stack.pop();\n        try {\n          var result = rec.dispose && rec.dispose.call(rec.value);\n          if (rec.async) return Promise.resolve(result).then(next, function (e) {\n            fail(e);\n            return next();\n          });\n        } catch (e) {\n          fail(e);\n        }\n      }\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  };\n}(typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n});\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CdpPage = void 0;\nconst rxjs_js_1 = require(\"../../third_party/rxjs/rxjs.js\");\nconst CDPSession_js_1 = require(\"../api/CDPSession.js\");\nconst Page_js_1 = require(\"../api/Page.js\");\nconst ConsoleMessage_js_1 = require(\"../common/ConsoleMessage.js\");\nconst Errors_js_1 = require(\"../common/Errors.js\");\nconst FileChooser_js_1 = require(\"../common/FileChooser.js\");\nconst NetworkManagerEvents_js_1 = require(\"../common/NetworkManagerEvents.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\nconst Deferred_js_1 = require(\"../util/Deferred.js\");\nconst disposable_js_1 = require(\"../util/disposable.js\");\nconst ErrorLike_js_1 = require(\"../util/ErrorLike.js\");\nconst Accessibility_js_1 = require(\"./Accessibility.js\");\nconst Binding_js_1 = require(\"./Binding.js\");\nconst CDPSession_js_2 = require(\"./CDPSession.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst Coverage_js_1 = require(\"./Coverage.js\");\nconst Dialog_js_1 = require(\"./Dialog.js\");\nconst EmulationManager_js_1 = require(\"./EmulationManager.js\");\nconst ExecutionContext_js_1 = require(\"./ExecutionContext.js\");\nconst FirefoxTargetManager_js_1 = require(\"./FirefoxTargetManager.js\");\nconst FrameManager_js_1 = require(\"./FrameManager.js\");\nconst FrameManagerEvents_js_1 = require(\"./FrameManagerEvents.js\");\nconst Input_js_1 = require(\"./Input.js\");\nconst IsolatedWorlds_js_1 = require(\"./IsolatedWorlds.js\");\nconst JSHandle_js_1 = require(\"./JSHandle.js\");\nconst Tracing_js_1 = require(\"./Tracing.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst WebWorker_js_1 = require(\"./WebWorker.js\");\nfunction convertConsoleMessageLevel(method) {\n  switch (method) {\n    case 'warning':\n      return 'warn';\n    default:\n      return method;\n  }\n}\n/**\n * @internal\n */\nclass CdpPage extends Page_js_1.Page {\n  static async _create(client, target, ignoreHTTPSErrors, defaultViewport) {\n    const page = new CdpPage(client, target, ignoreHTTPSErrors);\n    await page.#initialize();\n    if (defaultViewport) {\n      try {\n        await page.setViewport(defaultViewport);\n      } catch (err) {\n        if ((0, ErrorLike_js_1.isErrorLike)(err) && (0, Connection_js_1.isTargetClosedError)(err)) {\n          (0, util_js_1.debugError)(err);\n        } else {\n          throw err;\n        }\n      }\n    }\n    return page;\n  }\n  #closed = false;\n  #targetManager;\n  #primaryTargetClient;\n  #primaryTarget;\n  #tabTargetClient;\n  #tabTarget;\n  #keyboard;\n  #mouse;\n  #touchscreen;\n  #accessibility;\n  #frameManager;\n  #emulationManager;\n  #tracing;\n  #bindings = new Map();\n  #exposedFunctions = new Map();\n  #coverage;\n  #viewport;\n  #workers = new Map();\n  #fileChooserDeferreds = new Set();\n  #sessionCloseDeferred = Deferred_js_1.Deferred.create();\n  #serviceWorkerBypassed = false;\n  #userDragInterceptionEnabled = false;\n  #frameManagerHandlers = [[FrameManagerEvents_js_1.FrameManagerEvent.FrameAttached, frame => {\n    this.emit(\"frameattached\" /* PageEvent.FrameAttached */, frame);\n  }], [FrameManagerEvents_js_1.FrameManagerEvent.FrameDetached, frame => {\n    this.emit(\"framedetached\" /* PageEvent.FrameDetached */, frame);\n  }], [FrameManagerEvents_js_1.FrameManagerEvent.FrameNavigated, frame => {\n    this.emit(\"framenavigated\" /* PageEvent.FrameNavigated */, frame);\n  }]];\n  #networkManagerHandlers = [[NetworkManagerEvents_js_1.NetworkManagerEvent.Request, request => {\n    this.emit(\"request\" /* PageEvent.Request */, request);\n  }], [NetworkManagerEvents_js_1.NetworkManagerEvent.RequestServedFromCache, request => {\n    this.emit(\"requestservedfromcache\" /* PageEvent.RequestServedFromCache */, request);\n  }], [NetworkManagerEvents_js_1.NetworkManagerEvent.Response, response => {\n    this.emit(\"response\" /* PageEvent.Response */, response);\n  }], [NetworkManagerEvents_js_1.NetworkManagerEvent.RequestFailed, request => {\n    this.emit(\"requestfailed\" /* PageEvent.RequestFailed */, request);\n  }], [NetworkManagerEvents_js_1.NetworkManagerEvent.RequestFinished, request => {\n    this.emit(\"requestfinished\" /* PageEvent.RequestFinished */, request);\n  }]];\n  #sessionHandlers = [[CDPSession_js_1.CDPSessionEvent.Disconnected, () => {\n    this.#sessionCloseDeferred.reject(new Errors_js_1.TargetCloseError('Target closed'));\n  }], ['Page.domContentEventFired', () => {\n    return this.emit(\"domcontentloaded\" /* PageEvent.DOMContentLoaded */, undefined);\n  }], ['Page.loadEventFired', () => {\n    return this.emit(\"load\" /* PageEvent.Load */, undefined);\n  }], ['Runtime.consoleAPICalled', this.#onConsoleAPI.bind(this)], ['Runtime.bindingCalled', this.#onBindingCalled.bind(this)], ['Page.javascriptDialogOpening', this.#onDialog.bind(this)], ['Runtime.exceptionThrown', this.#handleException.bind(this)], ['Inspector.targetCrashed', this.#onTargetCrashed.bind(this)], ['Performance.metrics', this.#emitMetrics.bind(this)], ['Log.entryAdded', this.#onLogEntryAdded.bind(this)], ['Page.fileChooserOpened', this.#onFileChooser.bind(this)]];\n  constructor(client, target, ignoreHTTPSErrors) {\n    super();\n    this.#primaryTargetClient = client;\n    this.#tabTargetClient = client.parentSession();\n    (0, assert_js_1.assert)(this.#tabTargetClient, 'Tab target session is not defined.');\n    this.#tabTarget = this.#tabTargetClient._target();\n    (0, assert_js_1.assert)(this.#tabTarget, 'Tab target is not defined.');\n    this.#primaryTarget = target;\n    this.#targetManager = target._targetManager();\n    this.#keyboard = new Input_js_1.CdpKeyboard(client);\n    this.#mouse = new Input_js_1.CdpMouse(client, this.#keyboard);\n    this.#touchscreen = new Input_js_1.CdpTouchscreen(client, this.#keyboard);\n    this.#accessibility = new Accessibility_js_1.Accessibility(client);\n    this.#frameManager = new FrameManager_js_1.FrameManager(client, this, ignoreHTTPSErrors, this._timeoutSettings);\n    this.#emulationManager = new EmulationManager_js_1.EmulationManager(client);\n    this.#tracing = new Tracing_js_1.Tracing(client);\n    this.#coverage = new Coverage_js_1.Coverage(client);\n    this.#viewport = null;\n    for (const [eventName, handler] of this.#frameManagerHandlers) {\n      this.#frameManager.on(eventName, handler);\n    }\n    for (const [eventName, handler] of this.#networkManagerHandlers) {\n      // TODO: Remove any.\n      this.#frameManager.networkManager.on(eventName, handler);\n    }\n    this.#tabTargetClient.on(CDPSession_js_1.CDPSessionEvent.Swapped, this.#onActivation.bind(this));\n    this.#tabTargetClient.on(CDPSession_js_1.CDPSessionEvent.Ready, this.#onSecondaryTarget.bind(this));\n    this.#targetManager.on(\"targetGone\" /* TargetManagerEvent.TargetGone */, this.#onDetachedFromTarget);\n    this.#tabTarget._isClosedDeferred.valueOrThrow().then(() => {\n      this.#targetManager.off(\"targetGone\" /* TargetManagerEvent.TargetGone */, this.#onDetachedFromTarget);\n      this.emit(\"close\" /* PageEvent.Close */, undefined);\n      this.#closed = true;\n    }).catch(util_js_1.debugError);\n    this.#setupPrimaryTargetListeners();\n  }\n  async #onActivation(newSession) {\n    this.#primaryTargetClient = newSession;\n    (0, assert_js_1.assert)(this.#primaryTargetClient instanceof CDPSession_js_2.CdpCDPSession, 'CDPSession is not instance of CDPSessionImpl');\n    this.#primaryTarget = this.#primaryTargetClient._target();\n    (0, assert_js_1.assert)(this.#primaryTarget, 'Missing target on swap');\n    this.#keyboard.updateClient(newSession);\n    this.#mouse.updateClient(newSession);\n    this.#touchscreen.updateClient(newSession);\n    this.#accessibility.updateClient(newSession);\n    this.#emulationManager.updateClient(newSession);\n    this.#tracing.updateClient(newSession);\n    this.#coverage.updateClient(newSession);\n    await this.#frameManager.swapFrameTree(newSession);\n    this.#setupPrimaryTargetListeners();\n  }\n  async #onSecondaryTarget(session) {\n    (0, assert_js_1.assert)(session instanceof CDPSession_js_2.CdpCDPSession);\n    if (session._target()._subtype() !== 'prerender') {\n      return;\n    }\n    this.#frameManager.registerSpeculativeSession(session).catch(util_js_1.debugError);\n    this.#emulationManager.registerSpeculativeSession(session).catch(util_js_1.debugError);\n  }\n  /**\n   * Sets up listeners for the primary target. The primary target can change\n   * during a navigation to a prerended page.\n   */\n  #setupPrimaryTargetListeners() {\n    this.#primaryTargetClient.on(CDPSession_js_1.CDPSessionEvent.Ready, this.#onAttachedToTarget);\n    for (const [eventName, handler] of this.#sessionHandlers) {\n      // TODO: Remove any.\n      this.#primaryTargetClient.on(eventName, handler);\n    }\n  }\n  #onDetachedFromTarget = target => {\n    const sessionId = target._session()?.id();\n    const worker = this.#workers.get(sessionId);\n    if (!worker) {\n      return;\n    }\n    this.#workers.delete(sessionId);\n    this.emit(\"workerdestroyed\" /* PageEvent.WorkerDestroyed */, worker);\n  };\n  #onAttachedToTarget = session => {\n    (0, assert_js_1.assert)(session instanceof CDPSession_js_2.CdpCDPSession);\n    this.#frameManager.onAttachedToTarget(session._target());\n    if (session._target()._getTargetInfo().type === 'worker') {\n      const worker = new WebWorker_js_1.CdpWebWorker(session, session._target().url(), session._target()._targetId, session._target().type(), this.#addConsoleMessage.bind(this), this.#handleException.bind(this));\n      this.#workers.set(session.id(), worker);\n      this.emit(\"workercreated\" /* PageEvent.WorkerCreated */, worker);\n    }\n    session.on(CDPSession_js_1.CDPSessionEvent.Ready, this.#onAttachedToTarget);\n  };\n  async #initialize() {\n    try {\n      await Promise.all([this.#frameManager.initialize(this.#primaryTargetClient), this.#primaryTargetClient.send('Performance.enable'), this.#primaryTargetClient.send('Log.enable')]);\n    } catch (err) {\n      if ((0, ErrorLike_js_1.isErrorLike)(err) && (0, Connection_js_1.isTargetClosedError)(err)) {\n        (0, util_js_1.debugError)(err);\n      } else {\n        throw err;\n      }\n    }\n  }\n  async #onFileChooser(event) {\n    const env_1 = {\n      stack: [],\n      error: void 0,\n      hasError: false\n    };\n    try {\n      if (!this.#fileChooserDeferreds.size) {\n        return;\n      }\n      const frame = this.#frameManager.frame(event.frameId);\n      (0, assert_js_1.assert)(frame, 'This should never happen.');\n      // This is guaranteed to be an HTMLInputElement handle by the event.\n      const handle = __addDisposableResource(env_1, await frame.worlds[IsolatedWorlds_js_1.MAIN_WORLD].adoptBackendNode(event.backendNodeId), false);\n      const fileChooser = new FileChooser_js_1.FileChooser(handle.move(), event);\n      for (const promise of this.#fileChooserDeferreds) {\n        promise.resolve(fileChooser);\n      }\n      this.#fileChooserDeferreds.clear();\n    } catch (e_1) {\n      env_1.error = e_1;\n      env_1.hasError = true;\n    } finally {\n      __disposeResources(env_1);\n    }\n  }\n  _client() {\n    return this.#primaryTargetClient;\n  }\n  isServiceWorkerBypassed() {\n    return this.#serviceWorkerBypassed;\n  }\n  isDragInterceptionEnabled() {\n    return this.#userDragInterceptionEnabled;\n  }\n  isJavaScriptEnabled() {\n    return this.#emulationManager.javascriptEnabled;\n  }\n  async waitForFileChooser(options = {}) {\n    const needsEnable = this.#fileChooserDeferreds.size === 0;\n    const {\n      timeout = this._timeoutSettings.timeout()\n    } = options;\n    const deferred = Deferred_js_1.Deferred.create({\n      message: `Waiting for \\`FileChooser\\` failed: ${timeout}ms exceeded`,\n      timeout\n    });\n    this.#fileChooserDeferreds.add(deferred);\n    let enablePromise;\n    if (needsEnable) {\n      enablePromise = this.#primaryTargetClient.send('Page.setInterceptFileChooserDialog', {\n        enabled: true\n      });\n    }\n    try {\n      const [result] = await Promise.all([deferred.valueOrThrow(), enablePromise]);\n      return result;\n    } catch (error) {\n      this.#fileChooserDeferreds.delete(deferred);\n      throw error;\n    }\n  }\n  async setGeolocation(options) {\n    return await this.#emulationManager.setGeolocation(options);\n  }\n  target() {\n    return this.#primaryTarget;\n  }\n  browser() {\n    return this.#primaryTarget.browser();\n  }\n  browserContext() {\n    return this.#primaryTarget.browserContext();\n  }\n  #onTargetCrashed() {\n    this.emit(\"error\" /* PageEvent.Error */, new Error('Page crashed!'));\n  }\n  #onLogEntryAdded(event) {\n    const {\n      level,\n      text,\n      args,\n      source,\n      url,\n      lineNumber\n    } = event.entry;\n    if (args) {\n      args.map(arg => {\n        void (0, JSHandle_js_1.releaseObject)(this.#primaryTargetClient, arg);\n      });\n    }\n    if (source !== 'worker') {\n      this.emit(\"console\" /* PageEvent.Console */, new ConsoleMessage_js_1.ConsoleMessage(convertConsoleMessageLevel(level), text, [], [{\n        url,\n        lineNumber\n      }]));\n    }\n  }\n  mainFrame() {\n    return this.#frameManager.mainFrame();\n  }\n  get keyboard() {\n    return this.#keyboard;\n  }\n  get touchscreen() {\n    return this.#touchscreen;\n  }\n  get coverage() {\n    return this.#coverage;\n  }\n  get tracing() {\n    return this.#tracing;\n  }\n  get accessibility() {\n    return this.#accessibility;\n  }\n  frames() {\n    return this.#frameManager.frames();\n  }\n  workers() {\n    return Array.from(this.#workers.values());\n  }\n  async setRequestInterception(value) {\n    return await this.#frameManager.networkManager.setRequestInterception(value);\n  }\n  async setBypassServiceWorker(bypass) {\n    this.#serviceWorkerBypassed = bypass;\n    return await this.#primaryTargetClient.send('Network.setBypassServiceWorker', {\n      bypass\n    });\n  }\n  async setDragInterception(enabled) {\n    this.#userDragInterceptionEnabled = enabled;\n    return await this.#primaryTargetClient.send('Input.setInterceptDrags', {\n      enabled\n    });\n  }\n  async setOfflineMode(enabled) {\n    return await this.#frameManager.networkManager.setOfflineMode(enabled);\n  }\n  async emulateNetworkConditions(networkConditions) {\n    return await this.#frameManager.networkManager.emulateNetworkConditions(networkConditions);\n  }\n  setDefaultNavigationTimeout(timeout) {\n    this._timeoutSettings.setDefaultNavigationTimeout(timeout);\n  }\n  setDefaultTimeout(timeout) {\n    this._timeoutSettings.setDefaultTimeout(timeout);\n  }\n  getDefaultTimeout() {\n    return this._timeoutSettings.timeout();\n  }\n  async queryObjects(prototypeHandle) {\n    (0, assert_js_1.assert)(!prototypeHandle.disposed, 'Prototype JSHandle is disposed!');\n    (0, assert_js_1.assert)(prototypeHandle.id, 'Prototype JSHandle must not be referencing primitive value');\n    const response = await this.mainFrame().client.send('Runtime.queryObjects', {\n      prototypeObjectId: prototypeHandle.id\n    });\n    return (0, ExecutionContext_js_1.createCdpHandle)(this.mainFrame().mainRealm(), response.objects);\n  }\n  async cookies(...urls) {\n    const originalCookies = (await this.#primaryTargetClient.send('Network.getCookies', {\n      urls: urls.length ? urls : [this.url()]\n    })).cookies;\n    const unsupportedCookieAttributes = ['sourcePort'];\n    const filterUnsupportedAttributes = cookie => {\n      for (const attr of unsupportedCookieAttributes) {\n        delete cookie[attr];\n      }\n      return cookie;\n    };\n    return originalCookies.map(filterUnsupportedAttributes);\n  }\n  async deleteCookie(...cookies) {\n    const pageURL = this.url();\n    for (const cookie of cookies) {\n      const item = Object.assign({}, cookie);\n      if (!cookie.url && pageURL.startsWith('http')) {\n        item.url = pageURL;\n      }\n      await this.#primaryTargetClient.send('Network.deleteCookies', item);\n    }\n  }\n  async setCookie(...cookies) {\n    const pageURL = this.url();\n    const startsWithHTTP = pageURL.startsWith('http');\n    const items = cookies.map(cookie => {\n      const item = Object.assign({}, cookie);\n      if (!item.url && startsWithHTTP) {\n        item.url = pageURL;\n      }\n      (0, assert_js_1.assert)(item.url !== 'about:blank', `Blank page can not have cookie \"${item.name}\"`);\n      (0, assert_js_1.assert)(!String.prototype.startsWith.call(item.url || '', 'data:'), `Data URL page can not have cookie \"${item.name}\"`);\n      return item;\n    });\n    await this.deleteCookie(...items);\n    if (items.length) {\n      await this.#primaryTargetClient.send('Network.setCookies', {\n        cookies: items\n      });\n    }\n  }\n  async exposeFunction(name, pptrFunction) {\n    if (this.#bindings.has(name)) {\n      throw new Error(`Failed to add page binding with name ${name}: window['${name}'] already exists!`);\n    }\n    let binding;\n    switch (typeof pptrFunction) {\n      case 'function':\n        binding = new Binding_js_1.Binding(name, pptrFunction);\n        break;\n      default:\n        binding = new Binding_js_1.Binding(name, pptrFunction.default);\n        break;\n    }\n    this.#bindings.set(name, binding);\n    const expression = (0, utils_js_1.pageBindingInitString)('exposedFun', name);\n    await this.#primaryTargetClient.send('Runtime.addBinding', {\n      name\n    });\n    // TODO: investigate this as it appears to only apply to the main frame and\n    // local subframes instead of the entire frame tree (including future\n    // frame).\n    const {\n      identifier\n    } = await this.#primaryTargetClient.send('Page.addScriptToEvaluateOnNewDocument', {\n      source: expression\n    });\n    this.#exposedFunctions.set(name, identifier);\n    await Promise.all(this.frames().map(frame => {\n      // If a frame has not started loading, it might never start. Rely on\n      // addScriptToEvaluateOnNewDocument in that case.\n      if (frame !== this.mainFrame() && !frame._hasStartedLoading) {\n        return;\n      }\n      return frame.evaluate(expression).catch(util_js_1.debugError);\n    }));\n  }\n  async removeExposedFunction(name) {\n    const exposedFun = this.#exposedFunctions.get(name);\n    if (!exposedFun) {\n      throw new Error(`Failed to remove page binding with name ${name}: window['${name}'] does not exists!`);\n    }\n    await this.#primaryTargetClient.send('Runtime.removeBinding', {\n      name\n    });\n    await this.removeScriptToEvaluateOnNewDocument(exposedFun);\n    await Promise.all(this.frames().map(frame => {\n      // If a frame has not started loading, it might never start. Rely on\n      // addScriptToEvaluateOnNewDocument in that case.\n      if (frame !== this.mainFrame() && !frame._hasStartedLoading) {\n        return;\n      }\n      return frame.evaluate(name => {\n        // Removes the dangling Puppeteer binding wrapper.\n        // @ts-expect-error: In a different context.\n        globalThis[name] = undefined;\n      }, name).catch(util_js_1.debugError);\n    }));\n    this.#exposedFunctions.delete(name);\n    this.#bindings.delete(name);\n  }\n  async authenticate(credentials) {\n    return await this.#frameManager.networkManager.authenticate(credentials);\n  }\n  async setExtraHTTPHeaders(headers) {\n    return await this.#frameManager.networkManager.setExtraHTTPHeaders(headers);\n  }\n  async setUserAgent(userAgent, userAgentMetadata) {\n    return await this.#frameManager.networkManager.setUserAgent(userAgent, userAgentMetadata);\n  }\n  async metrics() {\n    const response = await this.#primaryTargetClient.send('Performance.getMetrics');\n    return this.#buildMetricsObject(response.metrics);\n  }\n  #emitMetrics(event) {\n    this.emit(\"metrics\" /* PageEvent.Metrics */, {\n      title: event.title,\n      metrics: this.#buildMetricsObject(event.metrics)\n    });\n  }\n  #buildMetricsObject(metrics) {\n    const result = {};\n    for (const metric of metrics || []) {\n      if (supportedMetrics.has(metric.name)) {\n        result[metric.name] = metric.value;\n      }\n    }\n    return result;\n  }\n  #handleException(exception) {\n    this.emit(\"pageerror\" /* PageEvent.PageError */, (0, utils_js_1.createClientError)(exception.exceptionDetails));\n  }\n  async #onConsoleAPI(event) {\n    if (event.executionContextId === 0) {\n      // DevTools protocol stores the last 1000 console messages. These\n      // messages are always reported even for removed execution contexts. In\n      // this case, they are marked with executionContextId = 0 and are\n      // reported upon enabling Runtime agent.\n      //\n      // Ignore these messages since:\n      // - there's no execution context we can use to operate with message\n      //   arguments\n      // - these messages are reported before Puppeteer clients can subscribe\n      //   to the 'console'\n      //   page event.\n      //\n      // @see https://github.com/puppeteer/puppeteer/issues/3865\n      return;\n    }\n    const context = this.#frameManager.getExecutionContextById(event.executionContextId, this.#primaryTargetClient);\n    if (!context) {\n      (0, util_js_1.debugError)(new Error(`ExecutionContext not found for a console message: ${JSON.stringify(event)}`));\n      return;\n    }\n    const values = event.args.map(arg => {\n      return (0, ExecutionContext_js_1.createCdpHandle)(context._world, arg);\n    });\n    this.#addConsoleMessage(convertConsoleMessageLevel(event.type), values, event.stackTrace);\n  }\n  async #onBindingCalled(event) {\n    let payload;\n    try {\n      payload = JSON.parse(event.payload);\n    } catch {\n      // The binding was either called by something in the page or it was\n      // called before our wrapper was initialized.\n      return;\n    }\n    const {\n      type,\n      name,\n      seq,\n      args,\n      isTrivial\n    } = payload;\n    if (type !== 'exposedFun') {\n      return;\n    }\n    const context = this.#frameManager.executionContextById(event.executionContextId, this.#primaryTargetClient);\n    if (!context) {\n      return;\n    }\n    const binding = this.#bindings.get(name);\n    await binding?.run(context, seq, args, isTrivial);\n  }\n  #addConsoleMessage(eventType, args, stackTrace) {\n    if (!this.listenerCount(\"console\" /* PageEvent.Console */)) {\n      args.forEach(arg => {\n        return arg.dispose();\n      });\n      return;\n    }\n    const textTokens = [];\n    // eslint-disable-next-line max-len -- The comment is long.\n    // eslint-disable-next-line rulesdir/use-using -- These are not owned by this function.\n    for (const arg of args) {\n      const remoteObject = arg.remoteObject();\n      if (remoteObject.objectId) {\n        textTokens.push(arg.toString());\n      } else {\n        textTokens.push((0, utils_js_1.valueFromRemoteObject)(remoteObject));\n      }\n    }\n    const stackTraceLocations = [];\n    if (stackTrace) {\n      for (const callFrame of stackTrace.callFrames) {\n        stackTraceLocations.push({\n          url: callFrame.url,\n          lineNumber: callFrame.lineNumber,\n          columnNumber: callFrame.columnNumber\n        });\n      }\n    }\n    const message = new ConsoleMessage_js_1.ConsoleMessage(convertConsoleMessageLevel(eventType), textTokens.join(' '), args, stackTraceLocations);\n    this.emit(\"console\" /* PageEvent.Console */, message);\n  }\n  #onDialog(event) {\n    const type = (0, util_js_1.validateDialogType)(event.type);\n    const dialog = new Dialog_js_1.CdpDialog(this.#primaryTargetClient, type, event.message, event.defaultPrompt);\n    this.emit(\"dialog\" /* PageEvent.Dialog */, dialog);\n  }\n  async reload(options) {\n    const [result] = await Promise.all([this.waitForNavigation({\n      ...options,\n      ignoreSameDocumentNavigation: true\n    }), this.#primaryTargetClient.send('Page.reload')]);\n    return result;\n  }\n  async createCDPSession() {\n    return await this.target().createCDPSession();\n  }\n  async goBack(options = {}) {\n    return await this.#go(-1, options);\n  }\n  async goForward(options = {}) {\n    return await this.#go(+1, options);\n  }\n  async #go(delta, options) {\n    const history = await this.#primaryTargetClient.send('Page.getNavigationHistory');\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry) {\n      return null;\n    }\n    const result = await Promise.all([this.waitForNavigation(options), this.#primaryTargetClient.send('Page.navigateToHistoryEntry', {\n      entryId: entry.id\n    })]);\n    return result[0];\n  }\n  async bringToFront() {\n    await this.#primaryTargetClient.send('Page.bringToFront');\n  }\n  async setJavaScriptEnabled(enabled) {\n    return await this.#emulationManager.setJavaScriptEnabled(enabled);\n  }\n  async setBypassCSP(enabled) {\n    await this.#primaryTargetClient.send('Page.setBypassCSP', {\n      enabled\n    });\n  }\n  async emulateMediaType(type) {\n    return await this.#emulationManager.emulateMediaType(type);\n  }\n  async emulateCPUThrottling(factor) {\n    return await this.#emulationManager.emulateCPUThrottling(factor);\n  }\n  async emulateMediaFeatures(features) {\n    return await this.#emulationManager.emulateMediaFeatures(features);\n  }\n  async emulateTimezone(timezoneId) {\n    return await this.#emulationManager.emulateTimezone(timezoneId);\n  }\n  async emulateIdleState(overrides) {\n    return await this.#emulationManager.emulateIdleState(overrides);\n  }\n  async emulateVisionDeficiency(type) {\n    return await this.#emulationManager.emulateVisionDeficiency(type);\n  }\n  async setViewport(viewport) {\n    const needsReload = await this.#emulationManager.emulateViewport(viewport);\n    this.#viewport = viewport;\n    if (needsReload) {\n      await this.reload();\n    }\n  }\n  viewport() {\n    return this.#viewport;\n  }\n  async evaluateOnNewDocument(pageFunction, ...args) {\n    const source = (0, util_js_1.evaluationString)(pageFunction, ...args);\n    const {\n      identifier\n    } = await this.#primaryTargetClient.send('Page.addScriptToEvaluateOnNewDocument', {\n      source\n    });\n    return {\n      identifier\n    };\n  }\n  async removeScriptToEvaluateOnNewDocument(identifier) {\n    await this.#primaryTargetClient.send('Page.removeScriptToEvaluateOnNewDocument', {\n      identifier\n    });\n  }\n  async setCacheEnabled(enabled = true) {\n    await this.#frameManager.networkManager.setCacheEnabled(enabled);\n  }\n  async _screenshot(options) {\n    const env_2 = {\n      stack: [],\n      error: void 0,\n      hasError: false\n    };\n    try {\n      const {\n        fromSurface,\n        omitBackground,\n        optimizeForSpeed,\n        quality,\n        clip: userClip,\n        type,\n        captureBeyondViewport\n      } = options;\n      const isFirefox = this.target()._targetManager() instanceof FirefoxTargetManager_js_1.FirefoxTargetManager;\n      const stack = __addDisposableResource(env_2, new disposable_js_1.AsyncDisposableStack(), true);\n      // Firefox omits background by default; it's not configurable.\n      if (!isFirefox && omitBackground && (type === 'png' || type === 'webp')) {\n        await this.#emulationManager.setTransparentBackgroundColor();\n        stack.defer(async () => {\n          await this.#emulationManager.resetDefaultBackgroundColor().catch(util_js_1.debugError);\n        });\n      }\n      let clip = userClip;\n      if (clip && !captureBeyondViewport) {\n        const viewport = await this.mainFrame().isolatedRealm().evaluate(() => {\n          const {\n            height,\n            pageLeft: x,\n            pageTop: y,\n            width\n          } = window.visualViewport;\n          return {\n            x,\n            y,\n            height,\n            width\n          };\n        });\n        clip = getIntersectionRect(clip, viewport);\n      }\n      // We need to do these spreads because Firefox doesn't allow unknown options.\n      const {\n        data\n      } = await this.#primaryTargetClient.send('Page.captureScreenshot', {\n        format: type,\n        ...(optimizeForSpeed ? {\n          optimizeForSpeed\n        } : {}),\n        ...(quality !== undefined ? {\n          quality: Math.round(quality)\n        } : {}),\n        ...(clip ? {\n          clip: {\n            ...clip,\n            scale: clip.scale ?? 1\n          }\n        } : {}),\n        ...(!fromSurface ? {\n          fromSurface\n        } : {}),\n        captureBeyondViewport\n      });\n      return data;\n    } catch (e_2) {\n      env_2.error = e_2;\n      env_2.hasError = true;\n    } finally {\n      const result_1 = __disposeResources(env_2);\n      if (result_1) await result_1;\n    }\n  }\n  async createPDFStream(options = {}) {\n    const {\n      timeout: ms = this._timeoutSettings.timeout()\n    } = options;\n    const {\n      landscape,\n      displayHeaderFooter,\n      headerTemplate,\n      footerTemplate,\n      printBackground,\n      scale,\n      width: paperWidth,\n      height: paperHeight,\n      margin,\n      pageRanges,\n      preferCSSPageSize,\n      omitBackground,\n      tagged: generateTaggedPDF,\n      outline: generateDocumentOutline\n    } = (0, util_js_1.parsePDFOptions)(options);\n    if (omitBackground) {\n      await this.#emulationManager.setTransparentBackgroundColor();\n    }\n    await (0, rxjs_js_1.firstValueFrom)((0, rxjs_js_1.from)(this.mainFrame().isolatedRealm().evaluate(() => {\n      return document.fonts.ready;\n    })).pipe((0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms))));\n    const printCommandPromise = this.#primaryTargetClient.send('Page.printToPDF', {\n      transferMode: 'ReturnAsStream',\n      landscape,\n      displayHeaderFooter,\n      headerTemplate,\n      footerTemplate,\n      printBackground,\n      scale,\n      paperWidth,\n      paperHeight,\n      marginTop: margin.top,\n      marginBottom: margin.bottom,\n      marginLeft: margin.left,\n      marginRight: margin.right,\n      pageRanges,\n      preferCSSPageSize,\n      generateTaggedPDF,\n      generateDocumentOutline\n    });\n    const result = await (0, rxjs_js_1.firstValueFrom)((0, rxjs_js_1.from)(printCommandPromise).pipe((0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms))));\n    if (omitBackground) {\n      await this.#emulationManager.resetDefaultBackgroundColor();\n    }\n    (0, assert_js_1.assert)(result.stream, '`stream` is missing from `Page.printToPDF');\n    return await (0, util_js_1.getReadableFromProtocolStream)(this.#primaryTargetClient, result.stream);\n  }\n  async pdf(options = {}) {\n    const {\n      path = undefined\n    } = options;\n    const readable = await this.createPDFStream(options);\n    const buffer = await (0, util_js_1.getReadableAsBuffer)(readable, path);\n    (0, assert_js_1.assert)(buffer, 'Could not create buffer');\n    return buffer;\n  }\n  async close(options = {\n    runBeforeUnload: undefined\n  }) {\n    const connection = this.#primaryTargetClient.connection();\n    (0, assert_js_1.assert)(connection, 'Protocol error: Connection closed. Most likely the page has been closed.');\n    const runBeforeUnload = !!options.runBeforeUnload;\n    if (runBeforeUnload) {\n      await this.#primaryTargetClient.send('Page.close');\n    } else {\n      await connection.send('Target.closeTarget', {\n        targetId: this.#primaryTarget._targetId\n      });\n      await this.#tabTarget._isClosedDeferred.valueOrThrow();\n    }\n  }\n  isClosed() {\n    return this.#closed;\n  }\n  get mouse() {\n    return this.#mouse;\n  }\n  /**\n   * This method is typically coupled with an action that triggers a device\n   * request from an api such as WebBluetooth.\n   *\n   * :::caution\n   *\n   * This must be called before the device request is made. It will not return a\n   * currently active device prompt.\n   *\n   * :::\n   *\n   * @example\n   *\n   * ```ts\n   * const [devicePrompt] = Promise.all([\n   *   page.waitForDevicePrompt(),\n   *   page.click('#connect-bluetooth'),\n   * ]);\n   * await devicePrompt.select(\n   *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n   * );\n   * ```\n   */\n  async waitForDevicePrompt(options = {}) {\n    return await this.mainFrame().waitForDevicePrompt(options);\n  }\n}\nexports.CdpPage = CdpPage;\nconst supportedMetrics = new Set(['Timestamp', 'Documents', 'Frames', 'JSEventListeners', 'Nodes', 'LayoutCount', 'RecalcStyleCount', 'LayoutDuration', 'RecalcStyleDuration', 'ScriptDuration', 'TaskDuration', 'JSHeapUsedSize', 'JSHeapTotalSize']);\n/** @see https://w3c.github.io/webdriver-bidi/#rectangle-intersection */\nfunction getIntersectionRect(clip, viewport) {\n  // Note these will already be normalized.\n  const x = Math.max(clip.x, viewport.x);\n  const y = Math.max(clip.y, viewport.y);\n  return {\n    x,\n    y,\n    width: Math.max(Math.min(clip.x + clip.width, viewport.x + viewport.width) - x, 0),\n    height: Math.max(Math.min(clip.y + clip.height, viewport.y + viewport.height) - y, 0)\n  };\n}","map":{"version":3,"names":["rxjs_js_1","require","CDPSession_js_1","Page_js_1","ConsoleMessage_js_1","Errors_js_1","FileChooser_js_1","NetworkManagerEvents_js_1","util_js_1","assert_js_1","Deferred_js_1","disposable_js_1","ErrorLike_js_1","Accessibility_js_1","Binding_js_1","CDPSession_js_2","Connection_js_1","Coverage_js_1","Dialog_js_1","EmulationManager_js_1","ExecutionContext_js_1","FirefoxTargetManager_js_1","FrameManager_js_1","FrameManagerEvents_js_1","Input_js_1","IsolatedWorlds_js_1","JSHandle_js_1","Tracing_js_1","utils_js_1","WebWorker_js_1","convertConsoleMessageLevel","method","CdpPage","Page","_create","client","target","ignoreHTTPSErrors","defaultViewport","page","initialize","setViewport","err","isErrorLike","isTargetClosedError","debugError","closed","targetManager","primaryTargetClient","primaryTarget","tabTargetClient","tabTarget","keyboard","mouse","touchscreen","accessibility","frameManager","emulationManager","tracing","bindings","Map","exposedFunctions","coverage","viewport","workers","fileChooserDeferreds","Set","sessionCloseDeferred","Deferred","create","serviceWorkerBypassed","userDragInterceptionEnabled","frameManagerHandlers","FrameManagerEvent","FrameAttached","frame","emit","FrameDetached","FrameNavigated","networkManagerHandlers","NetworkManagerEvent","Request","request","RequestServedFromCache","Response","response","RequestFailed","RequestFinished","sessionHandlers","CDPSessionEvent","Disconnected","reject","TargetCloseError","undefined","onConsoleAPI","bind","onBindingCalled","onDialog","handleException","onTargetCrashed","emitMetrics","onLogEntryAdded","onFileChooser","constructor","parentSession","assert","_target","_targetManager","CdpKeyboard","CdpMouse","CdpTouchscreen","Accessibility","FrameManager","_timeoutSettings","EmulationManager","Tracing","Coverage","eventName","handler","on","networkManager","Swapped","onActivation","Ready","onSecondaryTarget","onDetachedFromTarget","_isClosedDeferred","valueOrThrow","then","off","catch","setupPrimaryTargetListeners","#onActivation","newSession","CdpCDPSession","updateClient","swapFrameTree","#onSecondaryTarget","session","_subtype","registerSpeculativeSession","#setupPrimaryTargetListeners","onAttachedToTarget","sessionId","_session","id","worker","get","delete","_getTargetInfo","type","CdpWebWorker","url","_targetId","addConsoleMessage","set","#initialize","Promise","all","send","#onFileChooser","event","size","frameId","handle","__addDisposableResource","env_1","worlds","MAIN_WORLD","adoptBackendNode","backendNodeId","fileChooser","FileChooser","move","promise","resolve","clear","_client","isServiceWorkerBypassed","isDragInterceptionEnabled","isJavaScriptEnabled","javascriptEnabled","waitForFileChooser","options","needsEnable","timeout","deferred","message","add","enablePromise","enabled","result","error","setGeolocation","browser","browserContext","#onTargetCrashed","Error","#onLogEntryAdded","level","text","args","source","lineNumber","entry","map","arg","releaseObject","ConsoleMessage","mainFrame","frames","Array","from","values","setRequestInterception","value","setBypassServiceWorker","bypass","setDragInterception","setOfflineMode","emulateNetworkConditions","networkConditions","setDefaultNavigationTimeout","setDefaultTimeout","getDefaultTimeout","queryObjects","prototypeHandle","disposed","prototypeObjectId","createCdpHandle","mainRealm","objects","cookies","urls","originalCookies","length","unsupportedCookieAttributes","filterUnsupportedAttributes","cookie","attr","deleteCookie","pageURL","item","Object","assign","startsWith","setCookie","startsWithHTTP","items","name","String","prototype","call","exposeFunction","pptrFunction","has","binding","Binding","default","expression","pageBindingInitString","identifier","_hasStartedLoading","evaluate","removeExposedFunction","exposedFun","removeScriptToEvaluateOnNewDocument","globalThis","authenticate","credentials","setExtraHTTPHeaders","headers","setUserAgent","userAgent","userAgentMetadata","metrics","buildMetricsObject","#emitMetrics","title","#buildMetricsObject","metric","supportedMetrics","#handleException","exception","createClientError","exceptionDetails","#onConsoleAPI","executionContextId","context","getExecutionContextById","JSON","stringify","_world","stackTrace","#onBindingCalled","payload","parse","seq","isTrivial","executionContextById","run","#addConsoleMessage","eventType","listenerCount","forEach","dispose","textTokens","remoteObject","objectId","push","toString","valueFromRemoteObject","stackTraceLocations","callFrame","callFrames","columnNumber","join","#onDialog","validateDialogType","dialog","CdpDialog","defaultPrompt","reload","waitForNavigation","ignoreSameDocumentNavigation","createCDPSession","goBack","go","goForward","#go","delta","history","entries","currentIndex","entryId","bringToFront","setJavaScriptEnabled","setBypassCSP","emulateMediaType","emulateCPUThrottling","factor","emulateMediaFeatures","features","emulateTimezone","timezoneId","emulateIdleState","overrides","emulateVisionDeficiency","needsReload","emulateViewport","evaluateOnNewDocument","pageFunction","evaluationString","setCacheEnabled","_screenshot","fromSurface","omitBackground","optimizeForSpeed","quality","clip","userClip","captureBeyondViewport","isFirefox","FirefoxTargetManager","stack","env_2","AsyncDisposableStack","setTransparentBackgroundColor","defer","resetDefaultBackgroundColor","isolatedRealm","height","pageLeft","x","pageTop","y","width","window","visualViewport","getIntersectionRect","data","format","Math","round","scale","createPDFStream","ms","landscape","displayHeaderFooter","headerTemplate","footerTemplate","printBackground","paperWidth","paperHeight","margin","pageRanges","preferCSSPageSize","tagged","generateTaggedPDF","outline","generateDocumentOutline","parsePDFOptions","firstValueFrom","document","fonts","ready","pipe","raceWith","printCommandPromise","transferMode","marginTop","top","marginBottom","bottom","marginLeft","left","marginRight","right","stream","getReadableFromProtocolStream","pdf","path","readable","buffer","getReadableAsBuffer","close","runBeforeUnload","connection","targetId","isClosed","waitForDevicePrompt","exports","max","min"],"sources":["/Users/carlosgutierrez/Documents/React/spanish/node_modules/puppeteer-core/src/cdp/Page.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport {firstValueFrom, from, raceWith} from '../../third_party/rxjs/rxjs.js';\nimport type {Browser} from '../api/Browser.js';\nimport type {BrowserContext} from '../api/BrowserContext.js';\nimport {CDPSessionEvent, type CDPSession} from '../api/CDPSession.js';\nimport type {ElementHandle} from '../api/ElementHandle.js';\nimport type {Frame, WaitForOptions} from '../api/Frame.js';\nimport type {HTTPRequest} from '../api/HTTPRequest.js';\nimport type {HTTPResponse} from '../api/HTTPResponse.js';\nimport type {JSHandle} from '../api/JSHandle.js';\nimport type {Credentials} from '../api/Page.js';\nimport {\n  Page,\n  PageEvent,\n  type GeolocationOptions,\n  type MediaFeature,\n  type Metrics,\n  type NewDocumentScriptEvaluation,\n  type ScreenshotClip,\n  type ScreenshotOptions,\n  type WaitTimeoutOptions,\n} from '../api/Page.js';\nimport {\n  ConsoleMessage,\n  type ConsoleMessageType,\n} from '../common/ConsoleMessage.js';\nimport type {\n  Cookie,\n  DeleteCookiesRequest,\n  CookieParam,\n} from '../common/Cookie.js';\nimport {TargetCloseError} from '../common/Errors.js';\nimport {FileChooser} from '../common/FileChooser.js';\nimport {NetworkManagerEvent} from '../common/NetworkManagerEvents.js';\nimport type {PDFOptions} from '../common/PDFOptions.js';\nimport type {BindingPayload, HandleFor} from '../common/types.js';\nimport {\n  debugError,\n  evaluationString,\n  getReadableAsBuffer,\n  getReadableFromProtocolStream,\n  parsePDFOptions,\n  timeout,\n  validateDialogType,\n} from '../common/util.js';\nimport type {Viewport} from '../common/Viewport.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {AsyncDisposableStack} from '../util/disposable.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {Accessibility} from './Accessibility.js';\nimport {Binding} from './Binding.js';\nimport {CdpCDPSession} from './CDPSession.js';\nimport {isTargetClosedError} from './Connection.js';\nimport {Coverage} from './Coverage.js';\nimport type {DeviceRequestPrompt} from './DeviceRequestPrompt.js';\nimport {CdpDialog} from './Dialog.js';\nimport {EmulationManager} from './EmulationManager.js';\nimport {createCdpHandle} from './ExecutionContext.js';\nimport {FirefoxTargetManager} from './FirefoxTargetManager.js';\nimport type {CdpFrame} from './Frame.js';\nimport {FrameManager} from './FrameManager.js';\nimport {FrameManagerEvent} from './FrameManagerEvents.js';\nimport {CdpKeyboard, CdpMouse, CdpTouchscreen} from './Input.js';\nimport {MAIN_WORLD} from './IsolatedWorlds.js';\nimport {releaseObject} from './JSHandle.js';\nimport type {NetworkConditions} from './NetworkManager.js';\nimport type {CdpTarget} from './Target.js';\nimport type {TargetManager} from './TargetManager.js';\nimport {TargetManagerEvent} from './TargetManager.js';\nimport {Tracing} from './Tracing.js';\nimport {\n  createClientError,\n  pageBindingInitString,\n  valueFromRemoteObject,\n} from './utils.js';\nimport {CdpWebWorker} from './WebWorker.js';\n\nfunction convertConsoleMessageLevel(method: string): ConsoleMessageType {\n  switch (method) {\n    case 'warning':\n      return 'warn';\n    default:\n      return method as ConsoleMessageType;\n  }\n}\n\n/**\n * @internal\n */\nexport class CdpPage extends Page {\n  static async _create(\n    client: CDPSession,\n    target: CdpTarget,\n    ignoreHTTPSErrors: boolean,\n    defaultViewport: Viewport | null\n  ): Promise<CdpPage> {\n    const page = new CdpPage(client, target, ignoreHTTPSErrors);\n    await page.#initialize();\n    if (defaultViewport) {\n      try {\n        await page.setViewport(defaultViewport);\n      } catch (err) {\n        if (isErrorLike(err) && isTargetClosedError(err)) {\n          debugError(err);\n        } else {\n          throw err;\n        }\n      }\n    }\n    return page;\n  }\n\n  #closed = false;\n  readonly #targetManager: TargetManager;\n\n  #primaryTargetClient: CDPSession;\n  #primaryTarget: CdpTarget;\n  #tabTargetClient: CDPSession;\n  #tabTarget: CdpTarget;\n  #keyboard: CdpKeyboard;\n  #mouse: CdpMouse;\n  #touchscreen: CdpTouchscreen;\n  #accessibility: Accessibility;\n  #frameManager: FrameManager;\n  #emulationManager: EmulationManager;\n  #tracing: Tracing;\n  #bindings = new Map<string, Binding>();\n  #exposedFunctions = new Map<string, string>();\n  #coverage: Coverage;\n  #viewport: Viewport | null;\n  #workers = new Map<string, CdpWebWorker>();\n  #fileChooserDeferreds = new Set<Deferred<FileChooser>>();\n  #sessionCloseDeferred = Deferred.create<never, TargetCloseError>();\n  #serviceWorkerBypassed = false;\n  #userDragInterceptionEnabled = false;\n\n  readonly #frameManagerHandlers = [\n    [\n      FrameManagerEvent.FrameAttached,\n      (frame: CdpFrame) => {\n        this.emit(PageEvent.FrameAttached, frame);\n      },\n    ],\n    [\n      FrameManagerEvent.FrameDetached,\n      (frame: CdpFrame) => {\n        this.emit(PageEvent.FrameDetached, frame);\n      },\n    ],\n    [\n      FrameManagerEvent.FrameNavigated,\n      (frame: CdpFrame) => {\n        this.emit(PageEvent.FrameNavigated, frame);\n      },\n    ],\n  ] as const;\n\n  readonly #networkManagerHandlers = [\n    [\n      NetworkManagerEvent.Request,\n      (request: HTTPRequest) => {\n        this.emit(PageEvent.Request, request);\n      },\n    ],\n    [\n      NetworkManagerEvent.RequestServedFromCache,\n      (request: HTTPRequest) => {\n        this.emit(PageEvent.RequestServedFromCache, request);\n      },\n    ],\n    [\n      NetworkManagerEvent.Response,\n      (response: HTTPResponse) => {\n        this.emit(PageEvent.Response, response);\n      },\n    ],\n    [\n      NetworkManagerEvent.RequestFailed,\n      (request: HTTPRequest) => {\n        this.emit(PageEvent.RequestFailed, request);\n      },\n    ],\n    [\n      NetworkManagerEvent.RequestFinished,\n      (request: HTTPRequest) => {\n        this.emit(PageEvent.RequestFinished, request);\n      },\n    ],\n  ] as const;\n\n  readonly #sessionHandlers = [\n    [\n      CDPSessionEvent.Disconnected,\n      () => {\n        this.#sessionCloseDeferred.reject(\n          new TargetCloseError('Target closed')\n        );\n      },\n    ],\n    [\n      'Page.domContentEventFired',\n      () => {\n        return this.emit(PageEvent.DOMContentLoaded, undefined);\n      },\n    ],\n    [\n      'Page.loadEventFired',\n      () => {\n        return this.emit(PageEvent.Load, undefined);\n      },\n    ],\n    ['Runtime.consoleAPICalled', this.#onConsoleAPI.bind(this)],\n    ['Runtime.bindingCalled', this.#onBindingCalled.bind(this)],\n    ['Page.javascriptDialogOpening', this.#onDialog.bind(this)],\n    ['Runtime.exceptionThrown', this.#handleException.bind(this)],\n    ['Inspector.targetCrashed', this.#onTargetCrashed.bind(this)],\n    ['Performance.metrics', this.#emitMetrics.bind(this)],\n    ['Log.entryAdded', this.#onLogEntryAdded.bind(this)],\n    ['Page.fileChooserOpened', this.#onFileChooser.bind(this)],\n  ] as const;\n\n  constructor(\n    client: CDPSession,\n    target: CdpTarget,\n    ignoreHTTPSErrors: boolean\n  ) {\n    super();\n    this.#primaryTargetClient = client;\n    this.#tabTargetClient = client.parentSession()!;\n    assert(this.#tabTargetClient, 'Tab target session is not defined.');\n    this.#tabTarget = (this.#tabTargetClient as CdpCDPSession)._target();\n    assert(this.#tabTarget, 'Tab target is not defined.');\n    this.#primaryTarget = target;\n    this.#targetManager = target._targetManager();\n    this.#keyboard = new CdpKeyboard(client);\n    this.#mouse = new CdpMouse(client, this.#keyboard);\n    this.#touchscreen = new CdpTouchscreen(client, this.#keyboard);\n    this.#accessibility = new Accessibility(client);\n    this.#frameManager = new FrameManager(\n      client,\n      this,\n      ignoreHTTPSErrors,\n      this._timeoutSettings\n    );\n    this.#emulationManager = new EmulationManager(client);\n    this.#tracing = new Tracing(client);\n    this.#coverage = new Coverage(client);\n    this.#viewport = null;\n\n    for (const [eventName, handler] of this.#frameManagerHandlers) {\n      this.#frameManager.on(eventName, handler);\n    }\n\n    for (const [eventName, handler] of this.#networkManagerHandlers) {\n      // TODO: Remove any.\n      this.#frameManager.networkManager.on(eventName, handler as any);\n    }\n\n    this.#tabTargetClient.on(\n      CDPSessionEvent.Swapped,\n      this.#onActivation.bind(this)\n    );\n\n    this.#tabTargetClient.on(\n      CDPSessionEvent.Ready,\n      this.#onSecondaryTarget.bind(this)\n    );\n\n    this.#targetManager.on(\n      TargetManagerEvent.TargetGone,\n      this.#onDetachedFromTarget\n    );\n\n    this.#tabTarget._isClosedDeferred\n      .valueOrThrow()\n      .then(() => {\n        this.#targetManager.off(\n          TargetManagerEvent.TargetGone,\n          this.#onDetachedFromTarget\n        );\n\n        this.emit(PageEvent.Close, undefined);\n        this.#closed = true;\n      })\n      .catch(debugError);\n\n    this.#setupPrimaryTargetListeners();\n  }\n\n  async #onActivation(newSession: CDPSession): Promise<void> {\n    this.#primaryTargetClient = newSession;\n    assert(\n      this.#primaryTargetClient instanceof CdpCDPSession,\n      'CDPSession is not instance of CDPSessionImpl'\n    );\n    this.#primaryTarget = this.#primaryTargetClient._target();\n    assert(this.#primaryTarget, 'Missing target on swap');\n    this.#keyboard.updateClient(newSession);\n    this.#mouse.updateClient(newSession);\n    this.#touchscreen.updateClient(newSession);\n    this.#accessibility.updateClient(newSession);\n    this.#emulationManager.updateClient(newSession);\n    this.#tracing.updateClient(newSession);\n    this.#coverage.updateClient(newSession);\n    await this.#frameManager.swapFrameTree(newSession);\n    this.#setupPrimaryTargetListeners();\n  }\n\n  async #onSecondaryTarget(session: CDPSession): Promise<void> {\n    assert(session instanceof CdpCDPSession);\n    if (session._target()._subtype() !== 'prerender') {\n      return;\n    }\n    this.#frameManager.registerSpeculativeSession(session).catch(debugError);\n    this.#emulationManager\n      .registerSpeculativeSession(session)\n      .catch(debugError);\n  }\n\n  /**\n   * Sets up listeners for the primary target. The primary target can change\n   * during a navigation to a prerended page.\n   */\n  #setupPrimaryTargetListeners() {\n    this.#primaryTargetClient.on(\n      CDPSessionEvent.Ready,\n      this.#onAttachedToTarget\n    );\n\n    for (const [eventName, handler] of this.#sessionHandlers) {\n      // TODO: Remove any.\n      this.#primaryTargetClient.on(eventName, handler as any);\n    }\n  }\n\n  #onDetachedFromTarget = (target: CdpTarget) => {\n    const sessionId = target._session()?.id();\n    const worker = this.#workers.get(sessionId!);\n    if (!worker) {\n      return;\n    }\n    this.#workers.delete(sessionId!);\n    this.emit(PageEvent.WorkerDestroyed, worker);\n  };\n\n  #onAttachedToTarget = (session: CDPSession) => {\n    assert(session instanceof CdpCDPSession);\n    this.#frameManager.onAttachedToTarget(session._target());\n    if (session._target()._getTargetInfo().type === 'worker') {\n      const worker = new CdpWebWorker(\n        session,\n        session._target().url(),\n        session._target()._targetId,\n        session._target().type(),\n        this.#addConsoleMessage.bind(this),\n        this.#handleException.bind(this)\n      );\n      this.#workers.set(session.id(), worker);\n      this.emit(PageEvent.WorkerCreated, worker);\n    }\n    session.on(CDPSessionEvent.Ready, this.#onAttachedToTarget);\n  };\n\n  async #initialize(): Promise<void> {\n    try {\n      await Promise.all([\n        this.#frameManager.initialize(this.#primaryTargetClient),\n        this.#primaryTargetClient.send('Performance.enable'),\n        this.#primaryTargetClient.send('Log.enable'),\n      ]);\n    } catch (err) {\n      if (isErrorLike(err) && isTargetClosedError(err)) {\n        debugError(err);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  async #onFileChooser(\n    event: Protocol.Page.FileChooserOpenedEvent\n  ): Promise<void> {\n    if (!this.#fileChooserDeferreds.size) {\n      return;\n    }\n\n    const frame = this.#frameManager.frame(event.frameId);\n    assert(frame, 'This should never happen.');\n\n    // This is guaranteed to be an HTMLInputElement handle by the event.\n    using handle = (await frame.worlds[MAIN_WORLD].adoptBackendNode(\n      event.backendNodeId\n    )) as ElementHandle<HTMLInputElement>;\n\n    const fileChooser = new FileChooser(handle.move(), event);\n    for (const promise of this.#fileChooserDeferreds) {\n      promise.resolve(fileChooser);\n    }\n    this.#fileChooserDeferreds.clear();\n  }\n\n  _client(): CDPSession {\n    return this.#primaryTargetClient;\n  }\n\n  override isServiceWorkerBypassed(): boolean {\n    return this.#serviceWorkerBypassed;\n  }\n\n  override isDragInterceptionEnabled(): boolean {\n    return this.#userDragInterceptionEnabled;\n  }\n\n  override isJavaScriptEnabled(): boolean {\n    return this.#emulationManager.javascriptEnabled;\n  }\n\n  override async waitForFileChooser(\n    options: WaitTimeoutOptions = {}\n  ): Promise<FileChooser> {\n    const needsEnable = this.#fileChooserDeferreds.size === 0;\n    const {timeout = this._timeoutSettings.timeout()} = options;\n    const deferred = Deferred.create<FileChooser>({\n      message: `Waiting for \\`FileChooser\\` failed: ${timeout}ms exceeded`,\n      timeout,\n    });\n    this.#fileChooserDeferreds.add(deferred);\n    let enablePromise: Promise<void> | undefined;\n    if (needsEnable) {\n      enablePromise = this.#primaryTargetClient.send(\n        'Page.setInterceptFileChooserDialog',\n        {\n          enabled: true,\n        }\n      );\n    }\n    try {\n      const [result] = await Promise.all([\n        deferred.valueOrThrow(),\n        enablePromise,\n      ]);\n      return result;\n    } catch (error) {\n      this.#fileChooserDeferreds.delete(deferred);\n      throw error;\n    }\n  }\n\n  override async setGeolocation(options: GeolocationOptions): Promise<void> {\n    return await this.#emulationManager.setGeolocation(options);\n  }\n\n  override target(): CdpTarget {\n    return this.#primaryTarget;\n  }\n\n  override browser(): Browser {\n    return this.#primaryTarget.browser();\n  }\n\n  override browserContext(): BrowserContext {\n    return this.#primaryTarget.browserContext();\n  }\n\n  #onTargetCrashed(): void {\n    this.emit(PageEvent.Error, new Error('Page crashed!'));\n  }\n\n  #onLogEntryAdded(event: Protocol.Log.EntryAddedEvent): void {\n    const {level, text, args, source, url, lineNumber} = event.entry;\n    if (args) {\n      args.map(arg => {\n        void releaseObject(this.#primaryTargetClient, arg);\n      });\n    }\n    if (source !== 'worker') {\n      this.emit(\n        PageEvent.Console,\n        new ConsoleMessage(\n          convertConsoleMessageLevel(level),\n          text,\n          [],\n          [{url, lineNumber}]\n        )\n      );\n    }\n  }\n\n  override mainFrame(): CdpFrame {\n    return this.#frameManager.mainFrame();\n  }\n\n  override get keyboard(): CdpKeyboard {\n    return this.#keyboard;\n  }\n\n  override get touchscreen(): CdpTouchscreen {\n    return this.#touchscreen;\n  }\n\n  override get coverage(): Coverage {\n    return this.#coverage;\n  }\n\n  override get tracing(): Tracing {\n    return this.#tracing;\n  }\n\n  override get accessibility(): Accessibility {\n    return this.#accessibility;\n  }\n\n  override frames(): Frame[] {\n    return this.#frameManager.frames();\n  }\n\n  override workers(): CdpWebWorker[] {\n    return Array.from(this.#workers.values());\n  }\n\n  override async setRequestInterception(value: boolean): Promise<void> {\n    return await this.#frameManager.networkManager.setRequestInterception(\n      value\n    );\n  }\n\n  override async setBypassServiceWorker(bypass: boolean): Promise<void> {\n    this.#serviceWorkerBypassed = bypass;\n    return await this.#primaryTargetClient.send(\n      'Network.setBypassServiceWorker',\n      {bypass}\n    );\n  }\n\n  override async setDragInterception(enabled: boolean): Promise<void> {\n    this.#userDragInterceptionEnabled = enabled;\n    return await this.#primaryTargetClient.send('Input.setInterceptDrags', {\n      enabled,\n    });\n  }\n\n  override async setOfflineMode(enabled: boolean): Promise<void> {\n    return await this.#frameManager.networkManager.setOfflineMode(enabled);\n  }\n\n  override async emulateNetworkConditions(\n    networkConditions: NetworkConditions | null\n  ): Promise<void> {\n    return await this.#frameManager.networkManager.emulateNetworkConditions(\n      networkConditions\n    );\n  }\n\n  override setDefaultNavigationTimeout(timeout: number): void {\n    this._timeoutSettings.setDefaultNavigationTimeout(timeout);\n  }\n\n  override setDefaultTimeout(timeout: number): void {\n    this._timeoutSettings.setDefaultTimeout(timeout);\n  }\n\n  override getDefaultTimeout(): number {\n    return this._timeoutSettings.timeout();\n  }\n\n  override async queryObjects<Prototype>(\n    prototypeHandle: JSHandle<Prototype>\n  ): Promise<JSHandle<Prototype[]>> {\n    assert(!prototypeHandle.disposed, 'Prototype JSHandle is disposed!');\n    assert(\n      prototypeHandle.id,\n      'Prototype JSHandle must not be referencing primitive value'\n    );\n    const response = await this.mainFrame().client.send(\n      'Runtime.queryObjects',\n      {\n        prototypeObjectId: prototypeHandle.id,\n      }\n    );\n    return createCdpHandle(\n      this.mainFrame().mainRealm(),\n      response.objects\n    ) as HandleFor<Prototype[]>;\n  }\n\n  override async cookies(...urls: string[]): Promise<Cookie[]> {\n    const originalCookies = (\n      await this.#primaryTargetClient.send('Network.getCookies', {\n        urls: urls.length ? urls : [this.url()],\n      })\n    ).cookies;\n\n    const unsupportedCookieAttributes = ['sourcePort'];\n    const filterUnsupportedAttributes = (\n      cookie: Protocol.Network.Cookie\n    ): Protocol.Network.Cookie => {\n      for (const attr of unsupportedCookieAttributes) {\n        delete (cookie as unknown as Record<string, unknown>)[attr];\n      }\n      return cookie;\n    };\n    return originalCookies.map(filterUnsupportedAttributes);\n  }\n\n  override async deleteCookie(\n    ...cookies: DeleteCookiesRequest[]\n  ): Promise<void> {\n    const pageURL = this.url();\n    for (const cookie of cookies) {\n      const item = Object.assign({}, cookie);\n      if (!cookie.url && pageURL.startsWith('http')) {\n        item.url = pageURL;\n      }\n      await this.#primaryTargetClient.send('Network.deleteCookies', item);\n    }\n  }\n\n  override async setCookie(...cookies: CookieParam[]): Promise<void> {\n    const pageURL = this.url();\n    const startsWithHTTP = pageURL.startsWith('http');\n    const items = cookies.map(cookie => {\n      const item = Object.assign({}, cookie);\n      if (!item.url && startsWithHTTP) {\n        item.url = pageURL;\n      }\n      assert(\n        item.url !== 'about:blank',\n        `Blank page can not have cookie \"${item.name}\"`\n      );\n      assert(\n        !String.prototype.startsWith.call(item.url || '', 'data:'),\n        `Data URL page can not have cookie \"${item.name}\"`\n      );\n      return item;\n    });\n    await this.deleteCookie(...items);\n    if (items.length) {\n      await this.#primaryTargetClient.send('Network.setCookies', {\n        cookies: items,\n      });\n    }\n  }\n\n  override async exposeFunction(\n    name: string,\n    pptrFunction: Function | {default: Function}\n  ): Promise<void> {\n    if (this.#bindings.has(name)) {\n      throw new Error(\n        `Failed to add page binding with name ${name}: window['${name}'] already exists!`\n      );\n    }\n\n    let binding: Binding;\n    switch (typeof pptrFunction) {\n      case 'function':\n        binding = new Binding(\n          name,\n          pptrFunction as (...args: unknown[]) => unknown\n        );\n        break;\n      default:\n        binding = new Binding(\n          name,\n          pptrFunction.default as (...args: unknown[]) => unknown\n        );\n        break;\n    }\n\n    this.#bindings.set(name, binding);\n\n    const expression = pageBindingInitString('exposedFun', name);\n    await this.#primaryTargetClient.send('Runtime.addBinding', {name});\n    // TODO: investigate this as it appears to only apply to the main frame and\n    // local subframes instead of the entire frame tree (including future\n    // frame).\n    const {identifier} = await this.#primaryTargetClient.send(\n      'Page.addScriptToEvaluateOnNewDocument',\n      {\n        source: expression,\n      }\n    );\n\n    this.#exposedFunctions.set(name, identifier);\n\n    await Promise.all(\n      this.frames().map(frame => {\n        // If a frame has not started loading, it might never start. Rely on\n        // addScriptToEvaluateOnNewDocument in that case.\n        if (frame !== this.mainFrame() && !frame._hasStartedLoading) {\n          return;\n        }\n        return frame.evaluate(expression).catch(debugError);\n      })\n    );\n  }\n\n  override async removeExposedFunction(name: string): Promise<void> {\n    const exposedFun = this.#exposedFunctions.get(name);\n    if (!exposedFun) {\n      throw new Error(\n        `Failed to remove page binding with name ${name}: window['${name}'] does not exists!`\n      );\n    }\n\n    await this.#primaryTargetClient.send('Runtime.removeBinding', {name});\n    await this.removeScriptToEvaluateOnNewDocument(exposedFun);\n\n    await Promise.all(\n      this.frames().map(frame => {\n        // If a frame has not started loading, it might never start. Rely on\n        // addScriptToEvaluateOnNewDocument in that case.\n        if (frame !== this.mainFrame() && !frame._hasStartedLoading) {\n          return;\n        }\n        return frame\n          .evaluate(name => {\n            // Removes the dangling Puppeteer binding wrapper.\n            // @ts-expect-error: In a different context.\n            globalThis[name] = undefined;\n          }, name)\n          .catch(debugError);\n      })\n    );\n\n    this.#exposedFunctions.delete(name);\n    this.#bindings.delete(name);\n  }\n\n  override async authenticate(credentials: Credentials): Promise<void> {\n    return await this.#frameManager.networkManager.authenticate(credentials);\n  }\n\n  override async setExtraHTTPHeaders(\n    headers: Record<string, string>\n  ): Promise<void> {\n    return await this.#frameManager.networkManager.setExtraHTTPHeaders(headers);\n  }\n\n  override async setUserAgent(\n    userAgent: string,\n    userAgentMetadata?: Protocol.Emulation.UserAgentMetadata\n  ): Promise<void> {\n    return await this.#frameManager.networkManager.setUserAgent(\n      userAgent,\n      userAgentMetadata\n    );\n  }\n\n  override async metrics(): Promise<Metrics> {\n    const response = await this.#primaryTargetClient.send(\n      'Performance.getMetrics'\n    );\n    return this.#buildMetricsObject(response.metrics);\n  }\n\n  #emitMetrics(event: Protocol.Performance.MetricsEvent): void {\n    this.emit(PageEvent.Metrics, {\n      title: event.title,\n      metrics: this.#buildMetricsObject(event.metrics),\n    });\n  }\n\n  #buildMetricsObject(metrics?: Protocol.Performance.Metric[]): Metrics {\n    const result: Record<\n      Protocol.Performance.Metric['name'],\n      Protocol.Performance.Metric['value']\n    > = {};\n    for (const metric of metrics || []) {\n      if (supportedMetrics.has(metric.name)) {\n        result[metric.name] = metric.value;\n      }\n    }\n    return result;\n  }\n\n  #handleException(exception: Protocol.Runtime.ExceptionThrownEvent): void {\n    this.emit(\n      PageEvent.PageError,\n      createClientError(exception.exceptionDetails)\n    );\n  }\n\n  async #onConsoleAPI(\n    event: Protocol.Runtime.ConsoleAPICalledEvent\n  ): Promise<void> {\n    if (event.executionContextId === 0) {\n      // DevTools protocol stores the last 1000 console messages. These\n      // messages are always reported even for removed execution contexts. In\n      // this case, they are marked with executionContextId = 0 and are\n      // reported upon enabling Runtime agent.\n      //\n      // Ignore these messages since:\n      // - there's no execution context we can use to operate with message\n      //   arguments\n      // - these messages are reported before Puppeteer clients can subscribe\n      //   to the 'console'\n      //   page event.\n      //\n      // @see https://github.com/puppeteer/puppeteer/issues/3865\n      return;\n    }\n    const context = this.#frameManager.getExecutionContextById(\n      event.executionContextId,\n      this.#primaryTargetClient\n    );\n    if (!context) {\n      debugError(\n        new Error(\n          `ExecutionContext not found for a console message: ${JSON.stringify(\n            event\n          )}`\n        )\n      );\n      return;\n    }\n    const values = event.args.map(arg => {\n      return createCdpHandle(context._world, arg);\n    });\n    this.#addConsoleMessage(\n      convertConsoleMessageLevel(event.type),\n      values,\n      event.stackTrace\n    );\n  }\n\n  async #onBindingCalled(\n    event: Protocol.Runtime.BindingCalledEvent\n  ): Promise<void> {\n    let payload: BindingPayload;\n    try {\n      payload = JSON.parse(event.payload);\n    } catch {\n      // The binding was either called by something in the page or it was\n      // called before our wrapper was initialized.\n      return;\n    }\n    const {type, name, seq, args, isTrivial} = payload;\n    if (type !== 'exposedFun') {\n      return;\n    }\n\n    const context = this.#frameManager.executionContextById(\n      event.executionContextId,\n      this.#primaryTargetClient\n    );\n    if (!context) {\n      return;\n    }\n\n    const binding = this.#bindings.get(name);\n    await binding?.run(context, seq, args, isTrivial);\n  }\n\n  #addConsoleMessage(\n    eventType: string,\n    args: JSHandle[],\n    stackTrace?: Protocol.Runtime.StackTrace\n  ): void {\n    if (!this.listenerCount(PageEvent.Console)) {\n      args.forEach(arg => {\n        return arg.dispose();\n      });\n      return;\n    }\n    const textTokens = [];\n    // eslint-disable-next-line max-len -- The comment is long.\n    // eslint-disable-next-line rulesdir/use-using -- These are not owned by this function.\n    for (const arg of args) {\n      const remoteObject = arg.remoteObject();\n      if (remoteObject.objectId) {\n        textTokens.push(arg.toString());\n      } else {\n        textTokens.push(valueFromRemoteObject(remoteObject));\n      }\n    }\n    const stackTraceLocations = [];\n    if (stackTrace) {\n      for (const callFrame of stackTrace.callFrames) {\n        stackTraceLocations.push({\n          url: callFrame.url,\n          lineNumber: callFrame.lineNumber,\n          columnNumber: callFrame.columnNumber,\n        });\n      }\n    }\n    const message = new ConsoleMessage(\n      convertConsoleMessageLevel(eventType),\n      textTokens.join(' '),\n      args,\n      stackTraceLocations\n    );\n    this.emit(PageEvent.Console, message);\n  }\n\n  #onDialog(event: Protocol.Page.JavascriptDialogOpeningEvent): void {\n    const type = validateDialogType(event.type);\n    const dialog = new CdpDialog(\n      this.#primaryTargetClient,\n      type,\n      event.message,\n      event.defaultPrompt\n    );\n    this.emit(PageEvent.Dialog, dialog);\n  }\n\n  override async reload(\n    options?: WaitForOptions\n  ): Promise<HTTPResponse | null> {\n    const [result] = await Promise.all([\n      this.waitForNavigation({\n        ...options,\n        ignoreSameDocumentNavigation: true,\n      }),\n      this.#primaryTargetClient.send('Page.reload'),\n    ]);\n\n    return result;\n  }\n\n  override async createCDPSession(): Promise<CDPSession> {\n    return await this.target().createCDPSession();\n  }\n\n  override async goBack(\n    options: WaitForOptions = {}\n  ): Promise<HTTPResponse | null> {\n    return await this.#go(-1, options);\n  }\n\n  override async goForward(\n    options: WaitForOptions = {}\n  ): Promise<HTTPResponse | null> {\n    return await this.#go(+1, options);\n  }\n\n  async #go(\n    delta: number,\n    options: WaitForOptions\n  ): Promise<HTTPResponse | null> {\n    const history = await this.#primaryTargetClient.send(\n      'Page.getNavigationHistory'\n    );\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry) {\n      return null;\n    }\n    const result = await Promise.all([\n      this.waitForNavigation(options),\n      this.#primaryTargetClient.send('Page.navigateToHistoryEntry', {\n        entryId: entry.id,\n      }),\n    ]);\n    return result[0];\n  }\n\n  override async bringToFront(): Promise<void> {\n    await this.#primaryTargetClient.send('Page.bringToFront');\n  }\n\n  override async setJavaScriptEnabled(enabled: boolean): Promise<void> {\n    return await this.#emulationManager.setJavaScriptEnabled(enabled);\n  }\n\n  override async setBypassCSP(enabled: boolean): Promise<void> {\n    await this.#primaryTargetClient.send('Page.setBypassCSP', {enabled});\n  }\n\n  override async emulateMediaType(type?: string): Promise<void> {\n    return await this.#emulationManager.emulateMediaType(type);\n  }\n\n  override async emulateCPUThrottling(factor: number | null): Promise<void> {\n    return await this.#emulationManager.emulateCPUThrottling(factor);\n  }\n\n  override async emulateMediaFeatures(\n    features?: MediaFeature[]\n  ): Promise<void> {\n    return await this.#emulationManager.emulateMediaFeatures(features);\n  }\n\n  override async emulateTimezone(timezoneId?: string): Promise<void> {\n    return await this.#emulationManager.emulateTimezone(timezoneId);\n  }\n\n  override async emulateIdleState(overrides?: {\n    isUserActive: boolean;\n    isScreenUnlocked: boolean;\n  }): Promise<void> {\n    return await this.#emulationManager.emulateIdleState(overrides);\n  }\n\n  override async emulateVisionDeficiency(\n    type?: Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type']\n  ): Promise<void> {\n    return await this.#emulationManager.emulateVisionDeficiency(type);\n  }\n\n  override async setViewport(viewport: Viewport): Promise<void> {\n    const needsReload = await this.#emulationManager.emulateViewport(viewport);\n    this.#viewport = viewport;\n    if (needsReload) {\n      await this.reload();\n    }\n  }\n\n  override viewport(): Viewport | null {\n    return this.#viewport;\n  }\n\n  override async evaluateOnNewDocument<\n    Params extends unknown[],\n    Func extends (...args: Params) => unknown = (...args: Params) => unknown,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<NewDocumentScriptEvaluation> {\n    const source = evaluationString(pageFunction, ...args);\n    const {identifier} = await this.#primaryTargetClient.send(\n      'Page.addScriptToEvaluateOnNewDocument',\n      {\n        source,\n      }\n    );\n\n    return {identifier};\n  }\n\n  override async removeScriptToEvaluateOnNewDocument(\n    identifier: string\n  ): Promise<void> {\n    await this.#primaryTargetClient.send(\n      'Page.removeScriptToEvaluateOnNewDocument',\n      {\n        identifier,\n      }\n    );\n  }\n\n  override async setCacheEnabled(enabled = true): Promise<void> {\n    await this.#frameManager.networkManager.setCacheEnabled(enabled);\n  }\n\n  override async _screenshot(\n    options: Readonly<ScreenshotOptions>\n  ): Promise<string> {\n    const {\n      fromSurface,\n      omitBackground,\n      optimizeForSpeed,\n      quality,\n      clip: userClip,\n      type,\n      captureBeyondViewport,\n    } = options;\n\n    const isFirefox =\n      this.target()._targetManager() instanceof FirefoxTargetManager;\n\n    await using stack = new AsyncDisposableStack();\n    // Firefox omits background by default; it's not configurable.\n    if (!isFirefox && omitBackground && (type === 'png' || type === 'webp')) {\n      await this.#emulationManager.setTransparentBackgroundColor();\n      stack.defer(async () => {\n        await this.#emulationManager\n          .resetDefaultBackgroundColor()\n          .catch(debugError);\n      });\n    }\n\n    let clip = userClip;\n    if (clip && !captureBeyondViewport) {\n      const viewport = await this.mainFrame()\n        .isolatedRealm()\n        .evaluate(() => {\n          const {\n            height,\n            pageLeft: x,\n            pageTop: y,\n            width,\n          } = window.visualViewport!;\n          return {x, y, height, width};\n        });\n      clip = getIntersectionRect(clip, viewport);\n    }\n\n    // We need to do these spreads because Firefox doesn't allow unknown options.\n    const {data} = await this.#primaryTargetClient.send(\n      'Page.captureScreenshot',\n      {\n        format: type,\n        ...(optimizeForSpeed ? {optimizeForSpeed} : {}),\n        ...(quality !== undefined ? {quality: Math.round(quality)} : {}),\n        ...(clip ? {clip: {...clip, scale: clip.scale ?? 1}} : {}),\n        ...(!fromSurface ? {fromSurface} : {}),\n        captureBeyondViewport,\n      }\n    );\n    return data;\n  }\n\n  override async createPDFStream(\n    options: PDFOptions = {}\n  ): Promise<ReadableStream<Uint8Array>> {\n    const {timeout: ms = this._timeoutSettings.timeout()} = options;\n    const {\n      landscape,\n      displayHeaderFooter,\n      headerTemplate,\n      footerTemplate,\n      printBackground,\n      scale,\n      width: paperWidth,\n      height: paperHeight,\n      margin,\n      pageRanges,\n      preferCSSPageSize,\n      omitBackground,\n      tagged: generateTaggedPDF,\n      outline: generateDocumentOutline,\n    } = parsePDFOptions(options);\n\n    if (omitBackground) {\n      await this.#emulationManager.setTransparentBackgroundColor();\n    }\n\n    await firstValueFrom(\n      from(\n        this.mainFrame()\n          .isolatedRealm()\n          .evaluate(() => {\n            return document.fonts.ready;\n          })\n      ).pipe(raceWith(timeout(ms)))\n    );\n\n    const printCommandPromise = this.#primaryTargetClient.send(\n      'Page.printToPDF',\n      {\n        transferMode: 'ReturnAsStream',\n        landscape,\n        displayHeaderFooter,\n        headerTemplate,\n        footerTemplate,\n        printBackground,\n        scale,\n        paperWidth,\n        paperHeight,\n        marginTop: margin.top,\n        marginBottom: margin.bottom,\n        marginLeft: margin.left,\n        marginRight: margin.right,\n        pageRanges,\n        preferCSSPageSize,\n        generateTaggedPDF,\n        generateDocumentOutline,\n      }\n    );\n\n    const result = await firstValueFrom(\n      from(printCommandPromise).pipe(raceWith(timeout(ms)))\n    );\n\n    if (omitBackground) {\n      await this.#emulationManager.resetDefaultBackgroundColor();\n    }\n\n    assert(result.stream, '`stream` is missing from `Page.printToPDF');\n    return await getReadableFromProtocolStream(\n      this.#primaryTargetClient,\n      result.stream\n    );\n  }\n\n  override async pdf(options: PDFOptions = {}): Promise<Buffer> {\n    const {path = undefined} = options;\n    const readable = await this.createPDFStream(options);\n    const buffer = await getReadableAsBuffer(readable, path);\n    assert(buffer, 'Could not create buffer');\n    return buffer;\n  }\n\n  override async close(\n    options: {runBeforeUnload?: boolean} = {runBeforeUnload: undefined}\n  ): Promise<void> {\n    const connection = this.#primaryTargetClient.connection();\n    assert(\n      connection,\n      'Protocol error: Connection closed. Most likely the page has been closed.'\n    );\n    const runBeforeUnload = !!options.runBeforeUnload;\n    if (runBeforeUnload) {\n      await this.#primaryTargetClient.send('Page.close');\n    } else {\n      await connection.send('Target.closeTarget', {\n        targetId: this.#primaryTarget._targetId,\n      });\n      await this.#tabTarget._isClosedDeferred.valueOrThrow();\n    }\n  }\n\n  override isClosed(): boolean {\n    return this.#closed;\n  }\n\n  override get mouse(): CdpMouse {\n    return this.#mouse;\n  }\n\n  /**\n   * This method is typically coupled with an action that triggers a device\n   * request from an api such as WebBluetooth.\n   *\n   * :::caution\n   *\n   * This must be called before the device request is made. It will not return a\n   * currently active device prompt.\n   *\n   * :::\n   *\n   * @example\n   *\n   * ```ts\n   * const [devicePrompt] = Promise.all([\n   *   page.waitForDevicePrompt(),\n   *   page.click('#connect-bluetooth'),\n   * ]);\n   * await devicePrompt.select(\n   *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n   * );\n   * ```\n   */\n  override async waitForDevicePrompt(\n    options: WaitTimeoutOptions = {}\n  ): Promise<DeviceRequestPrompt> {\n    return await this.mainFrame().waitForDevicePrompt(options);\n  }\n}\n\nconst supportedMetrics = new Set<string>([\n  'Timestamp',\n  'Documents',\n  'Frames',\n  'JSEventListeners',\n  'Nodes',\n  'LayoutCount',\n  'RecalcStyleCount',\n  'LayoutDuration',\n  'RecalcStyleDuration',\n  'ScriptDuration',\n  'TaskDuration',\n  'JSHeapUsedSize',\n  'JSHeapTotalSize',\n]);\n\n/** @see https://w3c.github.io/webdriver-bidi/#rectangle-intersection */\nfunction getIntersectionRect(\n  clip: Readonly<ScreenshotClip>,\n  viewport: Readonly<Protocol.DOM.Rect>\n): ScreenshotClip {\n  // Note these will already be normalized.\n  const x = Math.max(clip.x, viewport.x);\n  const y = Math.max(clip.y, viewport.y);\n  return {\n    x,\n    y,\n    width: Math.max(\n      Math.min(clip.x + clip.width, viewport.x + viewport.width) - x,\n      0\n    ),\n    height: Math.max(\n      Math.min(clip.y + clip.height, viewport.y + viewport.height) - y,\n      0\n    ),\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}